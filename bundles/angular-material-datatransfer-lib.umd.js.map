{"version":3,"file":"angular-material-datatransfer-lib.umd.js","sources":["../../../projects/amd-lib/src/lib/enums/custom-event-type.enum.ts","../../../projects/amd-lib/src/lib/directives/host.directive.ts","../../../projects/amd-lib/src/lib/models/app-config.model.ts","../../../projects/amd-lib/src/lib/services/config.service.ts","../../../projects/amd-lib/src/lib/utils/date.util.ts","../../../projects/amd-lib/src/lib/enums/decimal-byte-unit.enum.ts","../../../node_modules/tslib/tslib.es6.js","../../../projects/amd-lib/src/lib/extensions/enum.extension.ts","../../../projects/amd-lib/src/lib/utils/decimal-byte-unit.util.ts","../../../projects/amd-lib/src/lib/models/size-container.model.ts","../../../projects/amd-lib/src/lib/models/progress-container.model.ts","../../../projects/amd-lib/src/lib/enums/transfer-status.enum.ts","../../../projects/amd-lib/src/lib/stores/datatransfer.store.ts","../../../projects/amd-lib/src/lib/models/pagination-container.model.ts","../../../projects/amd-lib/src/lib/services/pagination.service.ts","../../../projects/amd-lib/src/lib/services/logger.service.ts","../../../projects/amd-lib/src/lib/components/pagination.component.html","../../../projects/amd-lib/src/lib/components/pagination.component.ts","../../../projects/amd-lib/src/lib/components/dropzone.component.ts","../../../projects/amd-lib/src/lib/components/dropzone.component.html","../../../projects/amd-lib/src/lib/components/progress.component.html","../../../projects/amd-lib/src/lib/components/progress.component.ts","../../../projects/amd-lib/src/lib/components/main.component.html","../../../projects/amd-lib/src/lib/components/main.component.ts","../../../projects/amd-lib/src/lib/enums/transfer-type.enum.ts","../../../projects/amd-lib/src/lib/components/browse-dialog.component.ts","../../../projects/amd-lib/src/lib/components/browse-dialog.component.html","../../../projects/amd-lib/src/lib/components/edit-dialog.component.html","../../../projects/amd-lib/src/lib/components/edit-dialog.component.ts","../../../projects/amd-lib/src/lib/facades/datatransfer.facade.ts","../../../projects/amd-lib/src/lib/enums/export-type.enum.ts","../../../projects/amd-lib/src/lib/io/exporters/base.exporter.ts","../../../projects/amd-lib/src/lib/io/exporters/csv.exporter.ts","../../../projects/amd-lib/src/lib/io/exporters/json.exporter.ts","../../../projects/amd-lib/src/lib/services/export.service.ts","../../../projects/amd-lib/src/lib/models/preprocess-container.model.ts","../../../projects/amd-lib/src/lib/enums/hash-type.enum.ts","../../../projects/amd-lib/src/lib/enums/encoding-type.enum.ts","../../../projects/amd-lib/src/lib/models/hash-container.model.ts","../../../projects/amd-lib/src/lib/io/datatransfer.io.ts","../../../projects/amd-lib/src/lib/io/uploaders/base.uploader.ts","../../../projects/amd-lib/src/lib/models/datatransfer-item.model.ts","../../../projects/amd-lib/src/lib/utils/guid.util.ts","../../../projects/amd-lib/src/lib/services/crypto.service.ts","../../../projects/amd-lib/src/lib/io/uploaders/resumablejs.uploader.ts","../../../projects/amd-lib/src/lib/io/downloaders/base.downloader.ts","../../../projects/amd-lib/src/lib/utils/common.util.ts","../../../projects/amd-lib/src/lib/io/downloaders/blob.downloader.ts","../../../projects/amd-lib/src/lib/factories/datatransfer-facade.factory.ts","../../../projects/amd-lib/src/lib/angular-material-datatransfer.component.ts","../../../projects/amd-lib/src/lib/angular-material-datatransfer.component.html","../../../projects/amd-lib/src/lib/services/demo.service.ts","../../../projects/amd-lib/src/lib/angular-material-datatransfer.module.ts","../../../projects/amd-lib/src/public-api.ts","../../../projects/amd-lib/src/angular-material-datatransfer-lib.ts"],"sourcesContent":["export enum CustomEventType {\r\n    UNKNOWN,\r\n    // This event can be used to bootstrap the app module. An IAppConfig can be passed as detail payload.\r\n    CREATE,\r\n    // This event can be used to trigger an item download. The filename, url and size can be passed as detail payload.\r\n    DOWNLOAD_ITEM,\r\n    // This event can be used to update the app configuration. An IAppConfig can be passed as detail payload.\r\n    UPDATE_CONFIG,\r\n    // Indicates that the app has been initialized.\r\n    INIT,\r\n    // Indicates that the overall upload has been completed.\r\n    UPLOAD_COMPLETED,\r\n    // Indicates that the overall download has been completed.\r\n    DOWNLOAD_COMPLETED,\r\n    // Indicates that an item has been added. It will be passed a IDatatransferItem as detail payload.\r\n    ITEM_ADDED,\r\n    // Indicates that an item has been removed. It will be passed a IDatatransferItem as detail payload.\r\n    ITEM_REMOVED,\r\n    // Indicates that an item has been completed.\r\n    ITEM_COMPLETED,\r\n    // Indicates that all items have been cleared.\r\n    ITEMS_CLEARED,\r\n    // Indicates that an item have been clicked.\r\n    ITEM_CLICKED\r\n}\r\n\r\n// tslint:disable-next-line: no-namespace\r\nexport namespace CustomEventTypeExtensions {\r\n    const CUSTOM_EVENT_TYPE_NS = 'github:niklr/angular-material-datatransfer.';\r\n    const CUSTOM_EVENT_TYPE_UNKNOWN = CUSTOM_EVENT_TYPE_NS + 'unknown';\r\n    const CUSTOM_EVENT_TYPE_CREATE = CUSTOM_EVENT_TYPE_NS + 'create';\r\n    const CUSTOM_EVENT_TYPE_DOWNLOAD_ITEM = CUSTOM_EVENT_TYPE_NS + 'download-item';\r\n    const CUSTOM_EVENT_TYPE_UPDATE_CONFIG = CUSTOM_EVENT_TYPE_NS + 'update-config';\r\n    const CUSTOM_EVENT_TYPE_INIT = CUSTOM_EVENT_TYPE_NS + 'init';\r\n    const CUSTOM_EVENT_TYPE_UPLOAD_COMPLETED = CUSTOM_EVENT_TYPE_NS + 'upload-completed';\r\n    const CUSTOM_EVENT_TYPE_DOWNLOAD_COMPLETED = CUSTOM_EVENT_TYPE_NS + 'download-completed';\r\n    const CUSTOM_EVENT_TYPE_ITEM_ADDED = CUSTOM_EVENT_TYPE_NS + 'item-added';\r\n    const CUSTOM_EVENT_TYPE_ITEM_REMOVED = CUSTOM_EVENT_TYPE_NS + 'item-removed';\r\n    const CUSTOM_EVENT_TYPE_ITEM_COMPLETED = CUSTOM_EVENT_TYPE_NS + 'item-completed';\r\n    const CUSTOM_EVENT_TYPE_ITEMS_CLEARED = CUSTOM_EVENT_TYPE_NS + 'items-cleared';\r\n    const CUSTOM_EVENT_TYPE_ITEM_CLICKED = CUSTOM_EVENT_TYPE_NS + 'item-clicked';\r\n    export function toString(type: CustomEventType): string {\r\n        switch (type) {\r\n            case CustomEventType.CREATE:\r\n                return CUSTOM_EVENT_TYPE_CREATE;\r\n            case CustomEventType.DOWNLOAD_ITEM:\r\n                return CUSTOM_EVENT_TYPE_DOWNLOAD_ITEM;\r\n            case CustomEventType.UPDATE_CONFIG:\r\n                return CUSTOM_EVENT_TYPE_UPDATE_CONFIG;\r\n            case CustomEventType.INIT:\r\n                return CUSTOM_EVENT_TYPE_INIT;\r\n            case CustomEventType.UPLOAD_COMPLETED:\r\n                return CUSTOM_EVENT_TYPE_UPLOAD_COMPLETED;\r\n            case CustomEventType.DOWNLOAD_COMPLETED:\r\n                return CUSTOM_EVENT_TYPE_DOWNLOAD_COMPLETED;\r\n            case CustomEventType.ITEM_ADDED:\r\n                return CUSTOM_EVENT_TYPE_ITEM_ADDED;\r\n            case CustomEventType.ITEM_REMOVED:\r\n                return CUSTOM_EVENT_TYPE_ITEM_REMOVED;\r\n            case CustomEventType.ITEM_COMPLETED:\r\n                return CUSTOM_EVENT_TYPE_ITEM_COMPLETED;\r\n            case CustomEventType.ITEMS_CLEARED:\r\n                return CUSTOM_EVENT_TYPE_ITEMS_CLEARED;\r\n            case CustomEventType.ITEM_CLICKED:\r\n                return CUSTOM_EVENT_TYPE_ITEM_CLICKED;\r\n            default:\r\n                return CUSTOM_EVENT_TYPE_UNKNOWN;\r\n        }\r\n    }\r\n    export function toEnum(type: string): CustomEventType {\r\n        switch (type) {\r\n            case CUSTOM_EVENT_TYPE_CREATE:\r\n                return CustomEventType.CREATE;\r\n            case CUSTOM_EVENT_TYPE_DOWNLOAD_ITEM:\r\n                return CustomEventType.DOWNLOAD_ITEM;\r\n            case CUSTOM_EVENT_TYPE_UPDATE_CONFIG:\r\n                return CustomEventType.UPDATE_CONFIG;\r\n            case CUSTOM_EVENT_TYPE_INIT:\r\n                return CustomEventType.INIT;\r\n            case CUSTOM_EVENT_TYPE_UPLOAD_COMPLETED:\r\n                return CustomEventType.UPLOAD_COMPLETED;\r\n            case CUSTOM_EVENT_TYPE_DOWNLOAD_COMPLETED:\r\n                return CustomEventType.DOWNLOAD_COMPLETED;\r\n            case CUSTOM_EVENT_TYPE_ITEM_ADDED:\r\n                return CustomEventType.ITEM_ADDED;\r\n            case CUSTOM_EVENT_TYPE_ITEM_REMOVED:\r\n                return CustomEventType.ITEM_REMOVED;\r\n            case CUSTOM_EVENT_TYPE_ITEM_COMPLETED:\r\n                return CustomEventType.ITEM_COMPLETED;\r\n            case CUSTOM_EVENT_TYPE_ITEMS_CLEARED:\r\n                return CustomEventType.ITEMS_CLEARED;\r\n            case CUSTOM_EVENT_TYPE_ITEM_CLICKED:\r\n                return CustomEventType.ITEM_CLICKED;\r\n            default:\r\n                return CustomEventType.UNKNOWN;\r\n        }\r\n    }\r\n}\r\n","import { Directive, ViewContainerRef } from '@angular/core';\r\n\r\n@Directive({\r\n    // tslint:disable-next-line: directive-selector\r\n    selector: '[amd-host]',\r\n})\r\nexport class HostDirective {\r\n    constructor(public viewContainerRef: ViewContainerRef) { }\r\n}\r\n","export class CoreAppConfig {\r\n  showUploadDropzone = true;\r\n  uploadBrowseElementId = undefined;\r\n  uploadDropElementId = undefined;\r\n  paginationRppOptions = [5, 10, 25];\r\n  simultaneousDownloads = 2;\r\n  downloadMethod = \"GET\";\r\n  downloadHeaders: any = {};\r\n  downloadWithCredentials = false;\r\n  downloadXhrTimeout = 0;\r\n  preprocessHashEnabled = false;\r\n  preprocessHashChecked = true;\r\n  preprocessHashTarget = \"https://httpbin.org\";\r\n  preprocessHashMethod = \"GET\";\r\n  preprocessHashParameterName = \"hash\";\r\n  preprocessHashFileNameParameterName = \"filename\";\r\n  preprocessHashFunctionName = \"sha1\";\r\n  preprocessHashEncodingName = \"hex\";\r\n  preprocessHashInputEncodingName = \"latin1\";\r\n  preprocessHashTooltipContent =\r\n    \"The preprocess option checks if the file is already on the system before uploading.\";\r\n  saveDownloadFileAs: (response: any, name: string) => void = null;\r\n  parseMessageCallback = function (message) {\r\n    return message;\r\n  };\r\n  getTarget = function (request, params) {\r\n    let target;\r\n\r\n    if (request === \"preprocessHash\" && this.preprocessHashChecked) {\r\n      target = this.preprocessHashTarget;\r\n    }\r\n\r\n    if (typeof target === \"function\") {\r\n      return target(params);\r\n    }\r\n\r\n    if (target) {\r\n      const separator = target.indexOf(\"?\") < 0 ? \"?\" : \"&\";\r\n      const joinedParams = params.join(\"&\");\r\n\r\n      return target + separator + joinedParams;\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n}\r\n\r\nexport class ResumableJsAppConfig {\r\n  chunkSize = 1 * 1024 * 1024;\r\n  forceChunkSize = false;\r\n  simultaneousUploads = 3;\r\n  fileParameterName = \"file\";\r\n  chunkNumberParameterName = \"resumableChunkNumber\";\r\n  chunkSizeParameterName = \"resumableChunkSize\";\r\n  currentChunkSizeParameterName = \"resumableCurrentChunkSize\";\r\n  totalSizeParameterName = \"resumableTotalSize\";\r\n  typeParameterName = \"resumableType\";\r\n  identifierParameterName = \"resumableIdentifier\";\r\n  fileNameParameterName = \"resumableFilename\";\r\n  relativePathParameterName = \"resumableRelativePath\";\r\n  totalChunksParameterName = \"resumableTotalChunks\";\r\n  throttleProgressCallbacks = 0.5;\r\n  query = {};\r\n  headers = {};\r\n  preprocess = null;\r\n  preprocessFile = null;\r\n  method = \"multipart\";\r\n  uploadMethod = \"POST\";\r\n  testMethod = \"GET\";\r\n  prioritizeFirstAndLastChunk: false;\r\n  target = \"https://httpbin.org\";\r\n  testTarget = null;\r\n  parameterNamespace = \"\";\r\n  testChunks = true;\r\n  generateUniqueIdentifier = null;\r\n  getTarget = null;\r\n  maxChunkRetries = 100;\r\n  chunkRetryInterval = undefined;\r\n  permanentErrors = [400, 404, 405, 415, 501];\r\n  maxFiles = undefined;\r\n  withCredentials = false;\r\n  xhrTimeout = 0;\r\n  clearInput = true;\r\n  chunkFormat = \"blob\";\r\n  minFileSize = 1;\r\n  maxFileSize = undefined;\r\n  fileType = [];\r\n  maxFilesErrorCallback = function (files, errorCount) {\r\n    alert(\r\n      \"Please upload no more than \" +\r\n        this.maxFiles +\r\n        \" file\" +\r\n        (this.maxFiles === 1 ? \"\" : \"s\") +\r\n        \" at a time.\"\r\n    );\r\n  };\r\n  minFileSizeErrorCallback = function (file, errorCount) {\r\n    alert(\r\n      file.fileName ||\r\n        file.name +\r\n          \" is too small; please upload files larger than \" +\r\n          this.minFileSize +\r\n          \".\"\r\n    );\r\n  };\r\n  maxFileSizeErrorCallback = function (file, errorCount) {\r\n    alert(\r\n      file.fileName ||\r\n        file.name +\r\n          \" is too large; please upload files less than \" +\r\n          this.maxFileSize +\r\n          \".\"\r\n    );\r\n  };\r\n  fileTypeErrorCallback = function (file, errorCount) {\r\n    alert(\r\n      file.fileName ||\r\n        file.name +\r\n          \" has type not allowed; please upload files of type \" +\r\n          this.fileType +\r\n          \".\"\r\n    );\r\n  };\r\n}\r\n\r\nexport interface IAppConfig {\r\n  production: boolean;\r\n  core: CoreAppConfig;\r\n  resumablejs: ResumableJsAppConfig;\r\n}\r\n\r\nexport class AppConfig implements IAppConfig {\r\n  production = true;\r\n  core = new CoreAppConfig();\r\n  resumablejs = new ResumableJsAppConfig();\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { IAppConfig, AppConfig } from '../models/app-config.model';\r\n\r\n@Injectable()\r\nexport class ConfigService {\r\n\r\n    public static settings: IAppConfig = new AppConfig();\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    public load(config: IAppConfig) {\r\n        if (!!config) {\r\n            ConfigService.settings.production = config.production;\r\n            if (!!config.core) {\r\n                Object.keys(config.core).forEach(propertyName => {\r\n                    if (typeof config.core[propertyName] !== 'undefined') {\r\n                        ConfigService.settings.core[propertyName] = config.core[propertyName];\r\n                    }\r\n                });\r\n            }\r\n            if (!!config.resumablejs) {\r\n                Object.keys(config.resumablejs).forEach(propertyName => {\r\n                    if (typeof config.resumablejs[propertyName] !== 'undefined') {\r\n                        ConfigService.settings.resumablejs[propertyName] = config.resumablejs[propertyName];\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class DateUtil {\r\n    public now(): number {\r\n        return ((Date.now) ? Date.now() : (new Date()).getTime());\r\n    }\r\n\r\n    public format(seconds): string {\r\n        let date = new Date(seconds * 1000);\r\n        if (isNaN(date.getTime())) {\r\n            return undefined;\r\n        } else {\r\n            return ('0' + date.getUTCHours()).slice(-2) + ':' +\r\n                ('0' + date.getUTCMinutes()).slice(-2) + ':' +\r\n                ('0' + date.getUTCSeconds()).slice(-2);\r\n        }\r\n    }\r\n}\r\n","export enum DecimalByteUnit {\r\n\t/**\r\n\t * Byte (B)\r\n\t * 1 Byte\r\n\t */\r\n    Byte,\r\n\r\n\t/**\r\n\t * Kilobyte (kB)\r\n\t * 10^3 Byte = 1.000 Byte\r\n\t */\r\n    KB,\r\n\r\n\t/**\r\n\t * Megabyte (MB)\r\n\t * 10^6 Byte = 1.000.000 Byte\r\n\t */\r\n    MB,\r\n\r\n\t/**\r\n\t * Gigabyte (GB)\r\n\t * 10^9 Byte = 1.000.000.000 Byte\r\n\t */\r\n    GB,\r\n\r\n\t/**\r\n\t * Terabyte (TB)\r\n\t * 10^12 Byte = 1.000.000.000.000 Byte\r\n\t */\r\n    TB,\r\n\r\n\t/**\r\n\t * Petabyte (PB)\r\n\t * 10^15 Byte = 1.000.000.000.000.000 Byte\r\n\t */\r\n    PB\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","// @dynamic\r\nexport class EnumExtension {\r\n    static getNamesAndValues<T extends number>(e: any) {\r\n        return this.getNames(e).map(n => ({ name: n, value: e[n] as T }));\r\n    }\r\n\r\n    static getNames(e: any) {\r\n        return this.getObjValues(e).filter(v => typeof v === 'string') as string[];\r\n    }\r\n\r\n    static getValues<T extends number>(e: any) {\r\n        return this.getObjValues(e).filter(v => typeof v === 'number') as T[];\r\n    }\r\n\r\n    private static getObjValues(e: any): (number | string)[] {\r\n        return Object.keys(e).map(k => e[k]);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EnumExtension } from '../extensions/enum.extension';\r\nimport { DecimalByteUnit } from '../enums/decimal-byte-unit.enum';\r\n\r\n@Injectable()\r\nexport class DecimalByteUnitUtil {\r\n    C_KB: number = Math.pow(10, 3);\r\n    C_MB: number = Math.pow(10, 6);\r\n    C_GB: number = Math.pow(10, 9);\r\n    C_TB: number = Math.pow(10, 12);\r\n    C_PB: number = Math.pow(10, 15);\r\n\r\n    MAX: number = Number.MAX_VALUE;\r\n\r\n    byteUnits = EnumExtension.getNames(DecimalByteUnit);\r\n\r\n    private multiply(number: number, multiplier: number): number {\r\n        const limit: number = this.MAX / multiplier;\r\n\r\n        if (number > limit) {\r\n            return Number.MAX_VALUE;\r\n        }\r\n        if (number < -limit) {\r\n            return Number.MIN_VALUE;\r\n        }\r\n\r\n        return number * multiplier;\r\n    }\r\n\r\n    public convert(number: number, fromUnit: DecimalByteUnit, toUnit: DecimalByteUnit): number {\r\n        const bytes: number = this.toBytes(number, fromUnit);\r\n        switch (toUnit) {\r\n            case DecimalByteUnit.Byte:\r\n                return bytes;\r\n            case DecimalByteUnit.KB:\r\n                return bytes / this.C_KB;\r\n            case DecimalByteUnit.MB:\r\n                return bytes / this.C_MB;\r\n            case DecimalByteUnit.GB:\r\n                return bytes / this.C_GB;\r\n            case DecimalByteUnit.TB:\r\n                return bytes / this.C_TB;\r\n            case DecimalByteUnit.PB:\r\n                return bytes / this.C_PB;\r\n        }\r\n        return number;\r\n    }\r\n\r\n    public toBytes(number: number, fromUnit: DecimalByteUnit): number {\r\n        switch (fromUnit) {\r\n            case DecimalByteUnit.Byte:\r\n                return number;\r\n            case DecimalByteUnit.KB:\r\n                return this.multiply(number, this.C_KB);\r\n            case DecimalByteUnit.MB:\r\n                return this.multiply(number, this.C_MB);\r\n            case DecimalByteUnit.GB:\r\n                return this.multiply(number, this.C_GB);\r\n            case DecimalByteUnit.TB:\r\n                return this.multiply(number, this.C_TB);\r\n            case DecimalByteUnit.PB:\r\n                return this.multiply(number, this.C_PB);\r\n        }\r\n        return number;\r\n    }\r\n\r\n    public format(number: number, fromUnit: DecimalByteUnit): [DecimalByteUnit, number] {\r\n        let result: [DecimalByteUnit, number];\r\n        result = [DecimalByteUnit.Byte, this.toBytes(number, fromUnit)];\r\n        for (const currentUnit of this.byteUnits) {\r\n            if (Math.abs(result[1]) < 1000) {\r\n                result[0] = DecimalByteUnit[currentUnit];\r\n                break;\r\n            } else {\r\n                result[1] /= 1000;\r\n            }\r\n        }\r\n        result[1] = Number(result[1].toFixed(2));\r\n        return result;\r\n    }\r\n}\r\n","import { ReflectiveInjector } from '@angular/core';\r\nimport { DecimalByteUnit } from '../enums/decimal-byte-unit.enum';\r\nimport { DecimalByteUnitUtil } from '../utils/decimal-byte-unit.util';\r\n\r\nexport interface ISizeContainer {\r\n    displayUnit: string;\r\n    displaySize: number;\r\n    decimalByteUnit: DecimalByteUnit;\r\n    decimalByteUnitSize: number;\r\n    update(init?: Partial<SizeContainer>): void;\r\n    updateDecimal(decimalByteUnit: DecimalByteUnit, decimalByteUnitSize: number): void;\r\n}\r\n\r\nexport class SizeContainer implements ISizeContainer {\r\n\r\n    private decimalByteUnitUtil: DecimalByteUnitUtil;\r\n\r\n    public displayUnit: string;\r\n    public displaySize: number;\r\n    public decimalByteUnit: DecimalByteUnit = DecimalByteUnit.MB;\r\n    public decimalByteUnitSize = 0;\r\n\r\n    public constructor(init?: Partial<SizeContainer>) {\r\n        let injector = ReflectiveInjector.resolveAndCreate([DecimalByteUnitUtil]);\r\n        this.decimalByteUnitUtil = injector.get(DecimalByteUnitUtil);\r\n        this.update(init);\r\n    }\r\n\r\n    public update(init?: Partial<SizeContainer>): void {\r\n        if (!!this.decimalByteUnitUtil && !!init && !!init.decimalByteUnitSize) {\r\n            this.updateDecimal(init.decimalByteUnit, init.decimalByteUnitSize);\r\n        }\r\n    }\r\n\r\n    public updateDecimal(decimalByteUnit: DecimalByteUnit, decimalByteUnitSize: number): void {\r\n        let convertResult: [DecimalByteUnit, number] =\r\n            this.decimalByteUnitUtil.format(decimalByteUnitSize, decimalByteUnit);\r\n\r\n        this.decimalByteUnit = convertResult[0];\r\n        this.decimalByteUnitSize = convertResult[1];\r\n\r\n        this.displayUnit = DecimalByteUnit[this.decimalByteUnit];\r\n        this.displaySize = !!this.decimalByteUnitSize ? this.decimalByteUnitSize : 0;\r\n    }\r\n}\r\n","import { ReflectiveInjector } from '@angular/core';\r\nimport { DateUtil } from '../utils/date.util';\r\nimport { ISizeContainer, SizeContainer } from './size-container.model';\r\nimport { DecimalByteUnit } from '../enums/decimal-byte-unit.enum';\r\n\r\nexport interface IProgressContainer {\r\n    total: number; // bytes\r\n    progressTimestamp: number; // milliseconds\r\n    bitrateTimestamp: number; // milliseconds\r\n    bitrate: number; // bit/s\r\n    percent: number; // 0-100\r\n    displayBitrate: string;\r\n    displayTimeLeft: string;\r\n    loadedSizeContainer: ISizeContainer;\r\n    totalSizeContainer: ISizeContainer;\r\n    reset(total: number): void;\r\n    updateProgress(now: number, loaded: number, interval: number): void;\r\n    updateBitrate(now: number, loaded: number, interval: number): void;\r\n}\r\n\r\nexport class ProgressContainer implements IProgressContainer {\r\n    private dateUtil: DateUtil;\r\n    private loaded: number; // bytes\r\n    private bitrateSizeContainer: ISizeContainer;\r\n\r\n    public total: number;\r\n    public progressTimestamp: number;\r\n    public bitrateTimestamp: number;\r\n    public bitrate: number;\r\n    public percent: number;\r\n    public displayBitrate: string;\r\n    public displayTimeLeft: string;\r\n    public loadedSizeContainer: ISizeContainer;\r\n    public totalSizeContainer: ISizeContainer;\r\n\r\n    public constructor(total: number) {\r\n        const injector = ReflectiveInjector.resolveAndCreate([DateUtil]);\r\n        this.dateUtil = injector.get(DateUtil);\r\n\r\n        this.bitrateSizeContainer = new SizeContainer();\r\n        this.loadedSizeContainer = new SizeContainer();\r\n        this.totalSizeContainer = new SizeContainer();\r\n        this.reset(total);\r\n    }\r\n\r\n    public reset(total: number): void {\r\n        this.progressTimestamp = this.dateUtil.now();\r\n        this.bitrateTimestamp = this.dateUtil.now();\r\n        this.loaded = 0;\r\n        this.bitrate = 0;\r\n        this.percent = 0;\r\n        this.total = total;\r\n        this.displayBitrate = undefined;\r\n        this.displayTimeLeft = undefined;\r\n        this.bitrateSizeContainer.updateDecimal(DecimalByteUnit.Byte, this.bitrate);\r\n        this.loadedSizeContainer.updateDecimal(DecimalByteUnit.Byte, this.loaded);\r\n        this.totalSizeContainer.updateDecimal(DecimalByteUnit.Byte, this.total);\r\n    }\r\n\r\n    public updateProgress(now: number, loaded: number, interval: number): void {\r\n        const timeDiff = now - this.progressTimestamp;\r\n        // console.log('loaded: ' + loaded + ' total: ' + this.total);\r\n        if (!this.percent || timeDiff > interval) {\r\n            this.percent = Number((loaded / this.total * 100).toFixed(2));\r\n            this.loaded = loaded;\r\n            this.loadedSizeContainer.updateDecimal(DecimalByteUnit.Byte, this.loaded);\r\n            this.progressTimestamp = now;\r\n            if (this.bitrate > 0) {\r\n                this.displayTimeLeft = this.dateUtil.format((this.total - this.loaded) * 8 / this.bitrate);\r\n            } else {\r\n                this.displayTimeLeft = this.dateUtil.format(0);\r\n            }\r\n        } else if (loaded >= this.total) {\r\n            this.percent = 100;\r\n            this.loaded = this.total;\r\n        }\r\n    }\r\n\r\n    public updateBitrate(now: number, loaded: number, interval: number): void {\r\n        const timeDiff = now - this.bitrateTimestamp;\r\n        if (!this.bitrate || timeDiff > interval) {\r\n            this.bitrate = (loaded - this.loaded) * (1000 / timeDiff) * 8;\r\n            if (this.bitrate === Number.POSITIVE_INFINITY || this.bitrate === Number.NEGATIVE_INFINITY) {\r\n                this.bitrate = 0;\r\n            }\r\n            this.bitrateSizeContainer.updateDecimal(DecimalByteUnit.Byte, this.bitrate / 8);\r\n            this.displayBitrate = this.bitrateSizeContainer.displaySize + ' ' + this.bitrateSizeContainer.displayUnit + '/s';\r\n            this.bitrateTimestamp = now;\r\n        }\r\n    }\r\n}\r\n","export enum TransferStatus {\r\n    Ready,\r\n    Queued,\r\n    Preprocessing,\r\n    Uploading,\r\n    Downloading,\r\n    Finished,\r\n    Failed\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { IDatatransferItem } from '../models/datatransfer-item.model';\r\nimport { IProgressContainer, ProgressContainer } from '../models/progress-container.model';\r\nimport { TransferStatus } from '../enums/transfer-status.enum';\r\n\r\n@Injectable()\r\nexport class DatatransferStore {\r\n\r\n    private items: IDatatransferItem[] = [];\r\n\r\n    public count = 0;\r\n    public failedCount = 0;\r\n    public uploadProgress: IProgressContainer = new ProgressContainer(0);\r\n    public downloadProgress: IProgressContainer = new ProgressContainer(0);\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    private updateCount(): void {\r\n        this.count = this.items.length;\r\n    }\r\n\r\n    public updateFailedCount(): void {\r\n        this.failedCount = this.getByStatus(TransferStatus.Failed).length;\r\n    }\r\n\r\n    public getItems(): IDatatransferItem[] {\r\n        return this.items;\r\n    }\r\n\r\n    public getSelected(): IDatatransferItem[] {\r\n        return this.items.filter((item) => item.isSelected === true);\r\n    }\r\n\r\n    public getById(id: string): IDatatransferItem {\r\n        return this.items.find((item) => item.id === id);\r\n    }\r\n\r\n    public getIndexById(id: string): number {\r\n        return this.items.findIndex(i => i.id === id);\r\n    }\r\n\r\n    public clear(): void {\r\n        this.items.length = 0;\r\n        this.updateCount();\r\n        this.updateFailedCount();\r\n    }\r\n\r\n    public addItem(item: IDatatransferItem): void {\r\n        this.items.push(item);\r\n        this.updateCount();\r\n    }\r\n\r\n    public removeById(id: string): void {\r\n        const index: number = this.getIndexById(id);\r\n        if (index > -1) {\r\n            this.items.splice(index, 1);\r\n            this.updateCount();\r\n        }\r\n    }\r\n\r\n    public getByStatus(status: TransferStatus) {\r\n        return this.items.filter((item) => item.status === status);\r\n    }\r\n}\r\n","export interface IPaginationContainer {\r\n    pages: number[];\r\n    page: number;\r\n    rpp: number;\r\n    total: number;\r\n    rppOptions: number[];\r\n}\r\n\r\nexport class PaginationContainer implements IPaginationContainer {\r\n    public pages: number[];\r\n    public page: number;\r\n    public rpp: number;\r\n    public total: number;\r\n    public rppOptions: number[];\r\n\r\n    constructor() {\r\n        this.pages = [];\r\n        this.page = 1;\r\n        this.rpp = 5;\r\n        this.total = 0;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { IPaginationContainer, PaginationContainer } from '../models/pagination-container.model';\r\nimport { IDatatransferItem } from '../models/datatransfer-item.model';\r\nimport { DatatransferStore } from '../stores/datatransfer.store';\r\n\r\n@Injectable()\r\nexport class PaginationService {\r\n\r\n    public pagination: IPaginationContainer;\r\n    public paginatedItems: IDatatransferItem[] = [];\r\n\r\n    constructor(private datatransferStore: DatatransferStore) {\r\n        this.pagination = new PaginationContainer();\r\n    }\r\n\r\n    setRppOptions(rppOptions: number[]): void {\r\n        this.pagination.rppOptions = rppOptions;\r\n        this.setPaginationContainer();\r\n    }\r\n\r\n    update(total: number): void {\r\n        if (total <= 0) {\r\n            this.paginatedItems.length = 0;\r\n        }\r\n        this.pagination.total = total;\r\n        this.setPaginationContainer();\r\n    }\r\n\r\n    setPaginationContainer(): void {\r\n        const pageCount: number = this.pageCount();\r\n        if (this.pagination.pages.length > pageCount) {\r\n            this.pagination.pages.splice(pageCount);\r\n        } else {\r\n            for (let i = this.pagination.pages.length; i < pageCount; i++) {\r\n                this.pagination.pages.push(i + 1);\r\n            }\r\n        }\r\n        if (!this.pagination.pages.includes(this.pagination.page)) {\r\n            this.pagination.page = 1;\r\n        }\r\n        if (!!this.pagination.rppOptions && this.pagination.rppOptions.length > 0\r\n            && !this.pagination.rppOptions.includes(this.pagination.rpp)) {\r\n            this.pagination.rpp = this.pagination.rppOptions[0];\r\n        }\r\n        this.onPaginationChange();\r\n    }\r\n\r\n    max(): number {\r\n        return this.hasNext() ? this.pagination.page * this.pagination.rpp : this.pagination.total;\r\n    }\r\n\r\n    min(): number {\r\n        return this.pagination.total > 0 ? this.pagination.page * this.pagination.rpp - this.pagination.rpp + 1 : 0;\r\n    }\r\n\r\n    first(): void {\r\n        this.pagination.page = 1;\r\n        this.onPaginationChange();\r\n    }\r\n\r\n    last(): void {\r\n        this.pagination.page = this.pageCount();\r\n        this.onPaginationChange();\r\n    }\r\n\r\n    hasNext(): boolean {\r\n        return this.pagination.page * this.pagination.rpp < this.pagination.total;\r\n    }\r\n\r\n    hasPrevious(): boolean {\r\n        return this.pagination.page > 1;\r\n    }\r\n\r\n    moveNext(): void {\r\n        this.pagination.page++;\r\n        this.onPaginationChange();\r\n    }\r\n\r\n    movePrevious(): void {\r\n        this.pagination.page--;\r\n        this.onPaginationChange();\r\n    }\r\n\r\n    setPage(page: number) {\r\n        this.pagination.page = page;\r\n        this.onPageChange();\r\n    }\r\n\r\n    onPageChange(): void {\r\n        this.setPaginationContainer();\r\n        this.onPaginationChange();\r\n    }\r\n\r\n    onRppChange(): void {\r\n        this.setPaginationContainer();\r\n        this.pagination.page = 1;\r\n        this.onPaginationChange();\r\n    }\r\n\r\n    onPaginationChange(): void {\r\n        const startIndex = (this.pagination.page - 1) * this.pagination.rpp;\r\n        const endIndex = Math.min(startIndex + this.pagination.rpp, this.pagination.total);\r\n        this.paginatedItems = this.datatransferStore.getItems().slice(startIndex, endIndex);\r\n    }\r\n\r\n    pageCount(): number {\r\n        return this.pagination.total > 0 ? Math.ceil(this.pagination.total / (this.pagination.rpp > 0 ? this.pagination.rpp : 1)) : 1;\r\n    }\r\n\r\n    getPageByItemId(id: string): number {\r\n        const index: number = this.datatransferStore.getIndexById(id);\r\n        if (index > -1) {\r\n            return Math.ceil((index + 1) / this.pagination.rpp);\r\n        }\r\n    }\r\n\r\n    setPageByItemId(id: string): void {\r\n        const page = this.getPageByItemId(id);\r\n        if (this.pagination.page !== page) {\r\n            this.setPage(page);\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ConfigService } from './config.service';\r\n\r\n// From: https://github.com/angular/angular/issues/5458\r\n@Injectable()\r\nexport class LoggerService {\r\n\r\n    private get enabled(): boolean {\r\n        return !ConfigService.settings.production;\r\n    }\r\n\r\n    noop = () => { };\r\n\r\n    constructor() {\r\n    }\r\n\r\n    get debug() {\r\n        if (this.enabled) {\r\n            return console.debug.bind(console);\r\n        }\r\n        return this.noop;\r\n    }\r\n\r\n    get error() {\r\n        if (this.enabled) {\r\n            return console.error.bind(console);\r\n        }\r\n        return this.noop;\r\n    }\r\n\r\n    get log() {\r\n        if (this.enabled) {\r\n            return console.log.bind(console);\r\n        }\r\n        return this.noop;\r\n    }\r\n\r\n    get info() {\r\n        if (this.enabled) {\r\n            return console.info.bind(console);\r\n        }\r\n        return this.noop;\r\n    }\r\n\r\n    get warn() {\r\n        if (this.enabled) {\r\n            return console.warn.bind(console);\r\n        }\r\n        return this.noop;\r\n    }\r\n}\r\n","<mat-form-field>\r\n    <mat-select placeholder=\"Page\" [(ngModel)]=\"paginationService.pagination.page\" (change)=\"onPageChange()\" aria-label=\"Page\">\r\n        <mat-option *ngFor=\"let p of paginationService.pagination.pages\" [value]=\"p\">\r\n            {{ p }}\r\n        </mat-option>\r\n    </mat-select>\r\n</mat-form-field>\r\n<mat-form-field>\r\n    <mat-select placeholder=\"Rows per page\" [(ngModel)]=\"paginationService.pagination.rpp\" (change)=\"onRppChange()\" aria-label=\"Rows per page\">\r\n        <mat-option *ngFor=\"let o of paginationService.pagination.rppOptions\" [value]=\"o\">\r\n            {{ o }}\r\n        </mat-option>\r\n    </mat-select>\r\n</mat-form-field>\r\n<span>{{min()}} - {{max()}} of {{paginationService.pagination.total}}</span>\r\n<button mat-icon-button mat-button (click)=\"movePrevious()\" [disabled]=\"!hasPrevious()\">\r\n    <mat-icon>navigate_before</mat-icon>\r\n</button>\r\n<button mat-icon-button mat-button (click)=\"moveNext()\" [disabled]=\"!hasNext()\">\r\n    <mat-icon>navigate_next</mat-icon>\r\n</button>","import { Component, Input } from '@angular/core';\r\nimport { PaginationService } from '../services/pagination.service';\r\nimport { LoggerService } from '../services/logger.service';\r\n\r\n@Component({\r\n    // tslint:disable-next-line:component-selector\r\n    selector: 'amd-pagination',\r\n    templateUrl: 'pagination.component.html'\r\n})\r\n\r\nexport class PaginationComponent {\r\n\r\n    @Input() paginationService: PaginationService;\r\n\r\n    constructor(private logger: LoggerService) { }\r\n\r\n    max(): number {\r\n        return this.paginationService.max();\r\n    };\r\n\r\n    min(): number {\r\n        return this.paginationService.min();\r\n    };\r\n\r\n    first(): void {\r\n        this.paginationService.first();\r\n    }\r\n\r\n    last(): void {\r\n        this.paginationService.last();\r\n    }\r\n\r\n    hasNext(): boolean {\r\n        return this.paginationService.hasNext();\r\n    }\r\n\r\n    hasPrevious(): boolean {\r\n        return this.paginationService.hasPrevious();\r\n    };\r\n\r\n    moveNext(): void {\r\n        this.paginationService.moveNext();\r\n    }\r\n\r\n    movePrevious(): void {\r\n        this.paginationService.movePrevious();\r\n    }\r\n\r\n    onPageChange(): void {\r\n        this.paginationService.onPageChange();\r\n    }\r\n\r\n    onRppChange(): void {\r\n        this.paginationService.onRppChange();\r\n    }\r\n\r\n    onPaginationChange(): void {\r\n        this.paginationService.onPaginationChange();\r\n    }\r\n\r\n    pageCount(): number {\r\n        return this.paginationService.pageCount();\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    // tslint:disable-next-line:component-selector\r\n    selector: 'amd-dropzone',\r\n    templateUrl: 'dropzone.component.html'\r\n})\r\n\r\nexport class DropzoneComponent {\r\n\r\n    constructor() { }\r\n}\r\n","<div class=\"amd-dropzone\" id=\"amd-dropzone-component\">\r\n    <div class=\"amd-dropzone-content\">\r\n        <mat-icon style=\"font-size: 64px; color: rgba(255, 255, 255, 1);\">insert_drive_file</mat-icon>\r\n        <mat-icon style=\"margin-left: 10px;\">add_circle_outline</mat-icon>\r\n        <p>Drop your files/folders here or click to upload.</p>\r\n    </div>\r\n</div>","<div style=\"font-size: 11px; margin-top: 10px;\">\r\n    <div fxFlex=\"25%\" fxFlex.lt-md=\"50%\">\r\n        {{progressContainer.displayBitrate}}\r\n    </div>\r\n    <div fxFlex=\"25%\" fxHide.lt-md style=\"text-align: center\">\r\n        {{progressContainer.displayTimeLeft}}\r\n    </div>\r\n    <div fxFlex=\"25%\" fxHide.lt-md style=\"text-align: center\">\r\n        {{progressContainer.percent}}%\r\n    </div>\r\n    <div fxFlex=\"25%\" fxFlex.lt-md=\"50%\" style=\"text-align: right\">\r\n        {{progressContainer.loadedSizeContainer.displaySize}} / {{progressContainer.totalSizeContainer.displaySize}} {{progressContainer.totalSizeContainer.displayUnit}}\r\n    </div>\r\n</div>\r\n<mat-progress-bar *ngIf=\"progressContainer.total > 0\" [value]=\"progressContainer.percent\">\r\n</mat-progress-bar>","import { Component, Input } from '@angular/core';\r\nimport { IProgressContainer } from '../models/progress-container.model';\r\n\r\n@Component({\r\n    // tslint:disable-next-line:component-selector\r\n    selector: 'amd-progress',\r\n    templateUrl: 'progress.component.html'\r\n})\r\n\r\nexport class ProgressComponent {\r\n\r\n    @Input() progressContainer: IProgressContainer;\r\n\r\n    constructor() { }\r\n}\r\n","<div class=\"amd-font\">\r\n    <div *ngIf=\"config.core.showUploadDropzone\">\r\n        <amd-dropzone></amd-dropzone>\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayout.lt-sm=\"column\" style=\"margin-bottom: 10px\">\r\n        <div fxFlex>\r\n            <button class=\"amd-mr-1\" mat-raised-button *ngIf=\"datatransferFacade.showStartButton()\"\r\n                (click)=\"datatransferFacade.startAll()\">\r\n                <mat-icon>play_arrow</mat-icon> Start\r\n            </button>\r\n            <button class=\"amd-mr-1\" mat-raised-button *ngIf=\"datatransferFacade.showPauseButton()\"\r\n                (click)=\"datatransferFacade.pauseAll()\">\r\n                <mat-icon>pause</mat-icon> Pause\r\n            </button>\r\n            <button class=\"amd-mr-1\" mat-raised-button *ngIf=\"datatransferFacade.showRemoveButton()\"\r\n                (click)=\"datatransferFacade.removeAll()\">\r\n                <mat-icon>close</mat-icon> Remove all\r\n            </button>\r\n            <button class=\"amd-mr-1\" mat-raised-button *ngIf=\"datatransferFacade.showRetryButton()\"\r\n                (click)=\"datatransferFacade.retryAll()\">\r\n                <mat-icon>refresh</mat-icon> Retry ({{datatransferStore.failedCount}})\r\n            </button>\r\n            <mat-menu #exportMenu=\"matMenu\">\r\n                <button mat-menu-item (click)=\"datatransferFacade.export('CSV')\">\r\n                    <span>CSV</span>\r\n                </button>\r\n                <button mat-menu-item (click)=\"datatransferFacade.export('JSON')\">\r\n                    <span>JSON</span>\r\n                </button>\r\n            </mat-menu>\r\n            <button mat-raised-button *ngIf=\"datatransferFacade.showExportButton()\" [matMenuTriggerFor]=\"exportMenu\">\r\n                Export\r\n                <mat-icon>expand_more</mat-icon>\r\n            </button>\r\n            <mat-checkbox *ngIf=\"datatransferFacade.showPreprocessingCheckbox()\"\r\n                [(ngModel)]=\"config.core.preprocessHashChecked\" style=\"margin-left: 10px;\">\r\n                Preprocessing <span *ngIf=\"datatransferFacade.showPreprocessingTooltip()\"\r\n                    class=\"amd-vertical-align-middle\" [matTooltip]=\"config.core.preprocessHashTooltipContent\"\r\n                    matTooltipPosition=\"right\">\r\n                    <mat-icon>info_outline</mat-icon>\r\n                </span>\r\n            </mat-checkbox>\r\n        </div>\r\n        <div fxFlex=\"70px\" fxFlex.lt-sm=\"0px\">\r\n        </div>\r\n        <div fxFlex>\r\n            <div *ngIf=\"uploadProgress.percent > 0\">\r\n                <amd-progress [progressContainer]=\"uploadProgress\"></amd-progress>\r\n            </div>\r\n            <div *ngIf=\"downloadProgress.percent > 0\">\r\n                <amd-progress [progressContainer]=\"downloadProgress\"></amd-progress>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"amd-container\">\r\n        <div fxLayout=\"row\" class=\"amd-container-header\" style=\"align-items: center;\">\r\n            <div fxFlex=\"40px\">\r\n                <mat-checkbox (change)=\"datatransferFacade.toggleVisible($event.checked)\"></mat-checkbox>\r\n            </div>\r\n            <div fxFlex=\"50%\" fxFlex.lt-sm=\"100%\">\r\n                Filename\r\n            </div>\r\n            <div fxFlex=\"50%\" style=\"padding-left: 40px;\" fxHide.lt-sm>\r\n                Progress\r\n            </div>\r\n            <div fxFlex=\"20px\">\r\n                <mat-menu #batchItemMenu=\"matMenu\">\r\n                    <button mat-menu-item (click)=\"datatransferFacade.removeSelected()\">\r\n                        <mat-icon>close</mat-icon>\r\n                        <span>Remove</span>\r\n                    </button>\r\n                </mat-menu>\r\n                <button mat-icon-button [matMenuTriggerFor]=\"batchItemMenu\">\r\n                    <mat-icon>more_vert</mat-icon>\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <ng-template ngFor let-item [ngForOf]=\"paginationService.paginatedItems\" let-i=\"index\">\r\n            <div *ngIf=\"datatransferFacade.showPath(paginationService.paginatedItems, i)\">\r\n                <div fxLayout=\"row\" class=\"amd-container-headline\">\r\n                    <div fxFlex class=\"amd-container-headline-item\">\r\n                        <div class=\"amd-container-headline-item-entry\">\r\n                            <div fxFlex=\"40px\">\r\n                                <mat-icon>folder_open</mat-icon>\r\n                            </div>\r\n                            <div fxFlex>\r\n                                <span>\r\n                                    <b>{{item.displayPath}}</b>\r\n                                </span>\r\n                                <button mat-icon-button (click)=\"datatransferFacade.openEditPathDialog(item)\"\r\n                                    *ngIf=\"datatransferFacade.showEditDialog(item)\">\r\n                                    <mat-icon aria-label=\"Edit path\">edit</mat-icon>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div fxLayout=\"row\" fxLayout.lt-sm=\"column\" class=\"amd-container-row\"\r\n                [ngClass]=\"{'selected': item.isSelected}\" (click)=\"datatransferFacade.itemClick(item)\">\r\n                <div fxFlex class=\"amd-container-row-item\">\r\n                    <div class=\"amd-container-row-item-entry\">\r\n                        <div fxFlex=\"40px\">\r\n                            <mat-checkbox [(ngModel)]=\"item.isSelected\"></mat-checkbox>\r\n                        </div>\r\n                        <div fxFlex=\"100%\">\r\n                            <div matTooltip=\"{{item.name}}\" matTooltipPosition=\"above\">\r\n                                <span>{{item.name}}</span>\r\n                                <button mat-icon-button (click)=\"datatransferFacade.openEditFilenameDialog(item)\"\r\n                                    *ngIf=\"datatransferFacade.showEditDialog(item)\">\r\n                                    <mat-icon aria-label=\"Edit filename\">edit</mat-icon>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div fxFlex class=\"amd-container-row-item\">\r\n                    <div class=\"amd-container-row-item-entry\">\r\n                        <div fxFlex=\"40px\" matTooltip=\"{{item.preprocessContainer.percent}}%\"\r\n                            *ngIf=\"datatransferFacade.showSpinner(item); else showStatusClass\">\r\n                            <mat-progress-spinner *ngIf=\"item.preprocessContainer.percent > 0\" [diameter]=\"20\"\r\n                                mode=\"determinate\" [value]=\"item.preprocessContainer.percent\"></mat-progress-spinner>\r\n                        </div>\r\n                        <ng-template #showStatusClass>\r\n                            <div fxFlex=\"40px\">\r\n                                <mat-icon>{{datatransferFacade.getStatusClass(item.status)}}</mat-icon>\r\n                            </div>\r\n                        </ng-template>\r\n                        <div fxFlex=\"100%\">\r\n                            <div *ngIf=\"datatransferFacade.showProgressbar(item); else showStatusBlock\">\r\n                                <div class=\"amd-container-row-item-entry-stats\">\r\n                                    <div fxFlex=\"25%\" fxFlex.lt-md=\"50%\">\r\n                                        {{item.progressContainer.displayBitrate}}\r\n                                    </div>\r\n                                    <div fxFlex=\"25%\" fxHide.lt-md style=\"text-align: center\">\r\n                                        {{item.progressContainer.displayTimeLeft}}\r\n                                    </div>\r\n                                    <div fxFlex=\"25%\" fxHide.lt-md style=\"text-align: center\">\r\n                                        {{item.progressContainer.percent}}%\r\n                                    </div>\r\n                                    <div fxFlex=\"25%\" fxFlex.lt-md=\"50%\" style=\"text-align: right\">\r\n                                        {{item.progressContainer.loadedSizeContainer.displaySize}} /\r\n                                        {{item.sizeContainer.displaySize}}\r\n                                        {{item.sizeContainer.displayUnit}}\r\n                                    </div>\r\n                                </div>\r\n                                <mat-progress-bar *ngIf=\"item.progressContainer.total > 0\" color=\"primary\"\r\n                                    mode=\"determinate\" [value]=\"item.progressContainer.percent\">\r\n                                </mat-progress-bar>\r\n                            </div>\r\n                            <ng-template #showStatusBlock>\r\n                                {{item.getStatusName()}} ({{item.sizeContainer.displaySize}}\r\n                                {{item.sizeContainer.displayUnit}})\r\n                                <div *ngIf=\"!!item.message\">\r\n                                    <small>{{datatransferFacade.parseMessage(item)}}</small>\r\n                                </div>\r\n                            </ng-template>\r\n                        </div>\r\n                        <div fxFlex=\"20px\">\r\n                            <mat-menu #itemMenu=\"matMenu\">\r\n                                <button mat-menu-item (click)=\"datatransferFacade.retryItem(item)\"\r\n                                    *ngIf=\"datatransferFacade.showRetryButtonByItem(item)\">\r\n                                    <mat-icon>refresh</mat-icon>\r\n                                    <span>Retry</span>\r\n                                </button>\r\n                                <button mat-menu-item (click)=\"datatransferFacade.removeItem(item)\">\r\n                                    <mat-icon>close</mat-icon>\r\n                                    <span>Remove</span>\r\n                                </button>\r\n                            </mat-menu>\r\n                            <button mat-icon-button [matMenuTriggerFor]=\"itemMenu\">\r\n                                <mat-icon>more_vert</mat-icon>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </ng-template>\r\n    </div>\r\n\r\n    <div style=\"font-size: 12px; margin-top: 20px; text-align: right;\">\r\n        <amd-pagination [paginationService]=\"paginationService\"></amd-pagination>\r\n    </div>\r\n</div>\r\n","import { Component, Input, AfterViewInit } from '@angular/core';\r\nimport { IAppConfig } from '../models/app-config.model';\r\nimport { DatatransferFacade } from '../facades/datatransfer.facade';\r\nimport { IProgressContainer } from '../models/progress-container.model';\r\nimport { ConfigService } from '../services/config.service';\r\nimport { PaginationService } from '../services/pagination.service';\r\nimport { DatatransferStore } from '../stores/datatransfer.store';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'amd-main',\r\n  templateUrl: './main.component.html'\r\n})\r\nexport class MainComponent implements AfterViewInit {\r\n\r\n  @Input()\r\n  datatransferFacade: DatatransferFacade;\r\n\r\n  config: IAppConfig;\r\n  uploadProgress: IProgressContainer;\r\n  downloadProgress: IProgressContainer;\r\n\r\n  constructor(public datatransferStore: DatatransferStore, public paginationService: PaginationService) {\r\n    this.config = ConfigService.settings;\r\n    this.uploadProgress = this.datatransferStore.uploadProgress;\r\n    this.downloadProgress = this.datatransferStore.downloadProgress;\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.init();\r\n  }\r\n\r\n  private init(): void {\r\n    if (this.config.core.showUploadDropzone) {\r\n      const dropzoneElement = document.getElementById('amd-dropzone-component');\r\n      if (dropzoneElement) {\r\n        dropzoneElement.addEventListener('click', this.datatransferFacade.openBrowseDialog.bind(this.datatransferFacade), false);\r\n        this.datatransferFacade.assignUploadDrop(dropzoneElement);\r\n      }\r\n    } else {\r\n      if (typeof this.config.core.uploadBrowseElementId !== 'undefined') {\r\n        const uploadBrowseElement = document.getElementById(this.config.core.uploadBrowseElementId);\r\n        if (uploadBrowseElement) {\r\n          uploadBrowseElement.addEventListener('click', this.datatransferFacade.openBrowseDialog.bind(this.datatransferFacade), false);\r\n        }\r\n      }\r\n      if (typeof this.config.core.uploadDropElementId !== 'undefined') {\r\n        const uploadDropElement = document.getElementById(this.config.core.uploadDropElementId);\r\n        if (uploadDropElement) {\r\n          this.datatransferFacade.assignUploadDrop(uploadDropElement);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","export enum TransferType {\r\n    Upload,\r\n    Download\r\n}\r\n","import { Component, Inject, AfterViewInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { DatatransferFacade } from \"../facades/datatransfer.facade\";\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: \"amd-browse-dialog\",\r\n  templateUrl: \"browse-dialog.component.html\",\r\n})\r\nexport class BrowseDialogComponent implements AfterViewInit {\r\n  datatransferFacade: DatatransferFacade;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<BrowseDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.datatransferFacade = <DatatransferFacade>this.data.datatransferFacade;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.datatransferFacade.assignUploadBrowse(\r\n      document.getElementById(\"amd-browse-files\")\r\n    );\r\n    this.datatransferFacade.assignUploadBrowse(\r\n      document.getElementById(\"amd-browse-folder\"),\r\n      true\r\n    );\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.close();\r\n  }\r\n}\r\n","<mat-dialog-content>Select specific files or a folder</mat-dialog-content>\r\n<mat-dialog-actions>\r\n    <button mat-raised-button id=\"amd-browse-files\" (click)=\"close()\" tabindex=\"1\">\r\n        <mat-icon>insert_drive_file</mat-icon> Files</button>\r\n    <button mat-raised-button id=\"amd-browse-folder\" (click)=\"close()\" tabindex=\"2\">\r\n        <mat-icon>folder_open</mat-icon> Folder</button>\r\n</mat-dialog-actions>","<div *ngIf=\"mode === 'edit-path'\">\r\n    <mat-dialog-content>\r\n        <p>Enter a new path:</p>\r\n        <form>\r\n            <mat-form-field>\r\n                <input matInput autocomplete=\"off\" tabindex=\"1\" [value]=\"itemPath\"\r\n                    (input)=\"itemPath = $event.target.value; errorMessage = undefined;\" [formControl]=\"editFormControl\">\r\n            </mat-form-field>\r\n            <mat-error *ngIf=\"errorMessage\">\r\n                {{errorMessage}}\r\n            </mat-error>\r\n        </form>\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions>\r\n        <button mat-raised-button (click)=\"editPath()\" tabindex=\"2\">Ok</button>\r\n        <button mat-raised-button (click)=\"close()\" tabindex=\"-1\">Cancel</button>\r\n    </mat-dialog-actions>\r\n</div>\r\n<div *ngIf=\"mode === 'edit-filename'\">\r\n    <mat-dialog-content>\r\n        <p>Enter a new filename:</p>\r\n        <form>\r\n            <mat-form-field>\r\n                <input matInput autocomplete=\"off\" tabindex=\"1\" [value]=\"itemName\"\r\n                    (input)=\"itemName = $event.target.value; errorMessage = undefined;\" [formControl]=\"editFormControl\">\r\n            </mat-form-field>\r\n            <mat-error *ngIf=\"errorMessage\">\r\n                {{errorMessage}}\r\n            </mat-error>\r\n        </form>\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions>\r\n        <button mat-raised-button (click)=\"editFilename()\" tabindex=\"2\">Ok</button>\r\n        <button mat-raised-button (click)=\"close()\" tabindex=\"-1\">Cancel</button>\r\n    </mat-dialog-actions>\r\n</div>","import { Component, Inject, AfterViewInit } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { DatatransferFacade } from \"../facades/datatransfer.facade\";\r\nimport { IDatatransferItem } from \"../models/datatransfer-item.model\";\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: \"amd-edit-dialog\",\r\n  templateUrl: \"edit-dialog.component.html\",\r\n})\r\nexport class EditDialogComponent implements AfterViewInit {\r\n  datatransferFacade: DatatransferFacade;\r\n  mode: string;\r\n  item: IDatatransferItem;\r\n  itemPath: string;\r\n  itemName: string;\r\n  errorMessage: string;\r\n  editFormControl: FormControl;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<EditDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.datatransferFacade = <DatatransferFacade>this.data.datatransferFacade;\r\n    this.mode = this.data.mode;\r\n    this.item = <IDatatransferItem>this.data.item;\r\n    this.itemPath = this.item.path;\r\n    this.itemName = this.item.name;\r\n\r\n    this.editFormControl = new FormControl(\"\", []);\r\n  }\r\n\r\n  ngAfterViewInit() {}\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.close();\r\n  }\r\n\r\n  editPath(): void {\r\n    try {\r\n      this.datatransferFacade.editPath(\r\n        this.item,\r\n        this.item.path,\r\n        this.itemPath\r\n      );\r\n      this.close();\r\n    } catch (error) {\r\n      this.errorMessage = error;\r\n    }\r\n  }\r\n\r\n  editFilename(): void {\r\n    try {\r\n      this.datatransferFacade.editFilename(this.item, this.itemName);\r\n      this.close();\r\n    } catch (error) {\r\n      this.errorMessage = error;\r\n    }\r\n  }\r\n}\r\n","import { NgZone } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { IProgressContainer } from \"../models/progress-container.model\";\r\nimport { ConfigService } from \"../services/config.service\";\r\nimport { LoggerService } from \"../services/logger.service\";\r\nimport { DatatransferStore } from \"../stores/datatransfer.store\";\r\nimport { DateUtil } from \"../utils/date.util\";\r\nimport { PaginationService } from \"../services/pagination.service\";\r\nimport { ExportService } from \"../services/export.service\";\r\nimport { IUploader } from \"../io/uploaders/base.uploader\";\r\nimport { IDownloader } from \"../io/downloaders/base.downloader\";\r\nimport { IDatatransfer } from \"../io/datatransfer.io\";\r\nimport { IDatatransferItem } from \"../models/datatransfer-item.model\";\r\nimport { TransferStatus } from \"../enums/transfer-status.enum\";\r\nimport { TransferType } from \"../enums/transfer-type.enum\";\r\nimport { BrowseDialogComponent } from \"../components/browse-dialog.component\";\r\nimport { EditDialogComponent } from \"../components/edit-dialog.component\";\r\nimport {\r\n  CustomEventType,\r\n  CustomEventTypeExtensions,\r\n} from \"../enums/custom-event-type.enum\";\r\n\r\nexport class DatatransferFacade {\r\n  private uploadProgress: IProgressContainer;\r\n  private downloadProgress: IProgressContainer;\r\n\r\n  // Interval in milliseconds to calculate progress:\r\n  private progressInterval = 200;\r\n  // Interval in milliseconds to calculate bitrate:\r\n  private bitrateInterval = 1000;\r\n\r\n  constructor(\r\n    private logger: LoggerService,\r\n    private zone: NgZone,\r\n    private store: DatatransferStore,\r\n    private dateUtil: DateUtil,\r\n    private paginationService: PaginationService,\r\n    private exportService: ExportService,\r\n    private uploader: IUploader,\r\n    private downloader: IDownloader,\r\n    private dialog: MatDialog\r\n  ) {\r\n    this.uploadProgress = this.store.uploadProgress;\r\n    this.downloadProgress = this.store.downloadProgress;\r\n    this.init(this.uploader, this.uploadProgress);\r\n    this.init(this.downloader, this.downloadProgress);\r\n  }\r\n\r\n  private init(\r\n    datatransfer: IDatatransfer,\r\n    progressContainer: IProgressContainer\r\n  ): void {\r\n    datatransfer.on(\r\n      \"itemAdded\",\r\n      function (item: IDatatransferItem) {\r\n        const that = this as DatatransferFacade;\r\n        that.zone.run(() => {\r\n          that.addItem(item);\r\n        });\r\n      }.bind(this)\r\n    );\r\n    datatransfer.on(\r\n      \"zoneUpdated\",\r\n      function (\r\n        item: IDatatransferItem,\r\n        status: TransferStatus,\r\n        message?: string\r\n      ) {\r\n        const that = this as DatatransferFacade;\r\n        that.zone.run(() => {\r\n          // console.log(that.uploader.isWorking());\r\n        });\r\n      }.bind(this)\r\n    );\r\n    datatransfer.on(\r\n      \"itemStatusChanged\",\r\n      function (\r\n        item: IDatatransferItem,\r\n        status: TransferStatus,\r\n        message?: string\r\n      ) {\r\n        const that = this as DatatransferFacade;\r\n        that.zone.run(() => {\r\n          that.changeItemStatus(item, status, message);\r\n        });\r\n      }.bind(this)\r\n    );\r\n    datatransfer.on(\r\n      \"itemProgressUpdated\",\r\n      function (item: IDatatransferItem, progress: number) {\r\n        const that = this as DatatransferFacade;\r\n        that.zone.run(() => {\r\n          that.updateItemProgress(item, progress);\r\n        });\r\n      }.bind(this)\r\n    );\r\n    datatransfer.on(\r\n      \"overallProgressUpdated\",\r\n      function (transferType: TransferType, progress: number) {\r\n        const that = this as DatatransferFacade;\r\n        that.zone.run(() => {\r\n          that.updateOverallProgress(progressContainer, transferType, progress);\r\n        });\r\n      }.bind(this)\r\n    );\r\n    datatransfer.on(\r\n      \"overallSizeUpdated\",\r\n      function (size: number) {\r\n        const that = this as DatatransferFacade;\r\n        that.zone.run(() => {\r\n          that.updateOverallSize(progressContainer, size);\r\n        });\r\n      }.bind(this)\r\n    );\r\n  }\r\n\r\n  public assignUploadBrowse(element, isDirectory = false): void {\r\n    this.uploader.assignBrowse(element, isDirectory);\r\n  }\r\n\r\n  public assignUploadDrop(element): void {\r\n    this.uploader.assignDrop(element);\r\n  }\r\n\r\n  public openBrowseDialog(): void {\r\n    const dialogRef = this.dialog.open(BrowseDialogComponent, {\r\n      data: {\r\n        datatransferFacade: this,\r\n      },\r\n    });\r\n  }\r\n\r\n  public openEditPathDialog(item: IDatatransferItem): void {\r\n    const dialogRef = this.dialog.open(EditDialogComponent, {\r\n      data: {\r\n        datatransferFacade: this,\r\n        mode: \"edit-path\",\r\n        item,\r\n      },\r\n    });\r\n  }\r\n\r\n  public openEditFilenameDialog(item: IDatatransferItem): void {\r\n    const dialogRef = this.dialog.open(EditDialogComponent, {\r\n      data: {\r\n        datatransferFacade: this,\r\n        mode: \"edit-filename\",\r\n        item,\r\n      },\r\n    });\r\n  }\r\n\r\n  public toggleVisible(checked: boolean): void {\r\n    this.paginationService.paginatedItems.forEach((item, index) => {\r\n      item.isSelected = checked;\r\n    });\r\n  }\r\n\r\n  public startAll(): void {\r\n    this.store.getItems().forEach((item, index) => {\r\n      const that = this as DatatransferFacade;\r\n      if (\r\n        item.transferType === TransferType.Upload &&\r\n        item.status === TransferStatus.Ready\r\n      ) {\r\n        that.changeItemStatus(item, TransferStatus.Queued);\r\n      }\r\n    });\r\n    this.uploader.startAll();\r\n  }\r\n\r\n  public pauseAll(): void {\r\n    this.store.getItems().forEach((item, index) => {\r\n      item.preprocessContainer.pause(true);\r\n    });\r\n    this.uploader.pauseAll();\r\n    this.downloader.pauseAll();\r\n  }\r\n\r\n  public removeAll(): void {\r\n    this.store.getItems().forEach((item, index) => {\r\n      item.preprocessContainer.cancel(true);\r\n    });\r\n    this.uploader.removeAll();\r\n    this.downloader.removeAll();\r\n    this.store.clear();\r\n    this.uploadProgress.reset(0);\r\n    this.paginationService.update(0);\r\n    document.dispatchEvent(\r\n      new CustomEvent(\r\n        CustomEventTypeExtensions.toString(CustomEventType.ITEMS_CLEARED)\r\n      )\r\n    );\r\n  }\r\n\r\n  public retryAll(): void {\r\n    this.store.getByStatus(TransferStatus.Failed).forEach((item, index) => {\r\n      const that = this as DatatransferFacade;\r\n      that.retryItem(item);\r\n    });\r\n  }\r\n\r\n  public removeSelected(): void {\r\n    const temp = this.store.getSelected().slice();\r\n    temp.forEach((item, index) => {\r\n      const that = this as DatatransferFacade;\r\n      that.removeItem(item);\r\n    });\r\n  }\r\n\r\n  public addItem(item: IDatatransferItem): void {\r\n    if (!!item) {\r\n      this.store.addItem(item);\r\n      this.paginationService.update(this.store.count);\r\n      document.dispatchEvent(\r\n        new CustomEvent(\r\n          CustomEventTypeExtensions.toString(CustomEventType.ITEM_ADDED),\r\n          { detail: item }\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  public removeItem(item: IDatatransferItem): void {\r\n    if (!!item) {\r\n      item.preprocessContainer.cancel(true);\r\n      switch (item.transferType) {\r\n        case TransferType.Upload:\r\n          this.uploader.removeItem(item);\r\n          break;\r\n        case TransferType.Download:\r\n          this.downloader.removeItem(item);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      this.store.removeById(item.id);\r\n      this.paginationService.update(this.store.count);\r\n      document.dispatchEvent(\r\n        new CustomEvent(\r\n          CustomEventTypeExtensions.toString(CustomEventType.ITEM_REMOVED),\r\n          { detail: item }\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  public retryItem(item: IDatatransferItem): void {\r\n    if (!!item) {\r\n      item.preprocessContainer.cancel(true);\r\n      switch (item.transferType) {\r\n        case TransferType.Upload:\r\n          this.uploader.retryItem(item);\r\n          break;\r\n        case TransferType.Download:\r\n          this.downloader.retryItem(item);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  public itemClick(item: IDatatransferItem) {\r\n   document.dispatchEvent(\r\n     new CustomEvent(\r\n       CustomEventTypeExtensions.toString(CustomEventType.ITEM_CLICKED),\r\n       { detail: item }\r\n     )\r\n   );\r\n  }\r\n\r\n  public changeItemStatus(\r\n    item: IDatatransferItem,\r\n    status: TransferStatus,\r\n    message?: string\r\n  ): void {\r\n    if (!!item && !!status) {\r\n      if (item.status !== status) {\r\n        this.paginationService.setPageByItemId(item.id);\r\n        item.status = status;\r\n        if (!!message) {\r\n          item.message = message;\r\n        }\r\n        this.store.updateFailedCount();\r\n        if (status === TransferStatus.Finished) {\r\n          document.dispatchEvent(\r\n            new CustomEvent(\r\n              CustomEventTypeExtensions.toString(\r\n                CustomEventType.ITEM_COMPLETED\r\n              ),\r\n              { detail: item }\r\n            )\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public updateItemProgress(item: IDatatransferItem, progress: number): void {\r\n    if (!!item) {\r\n      const now: number = this.dateUtil.now();\r\n      const loaded: number = item.progressContainer.total * progress;\r\n      item.progressContainer.updateBitrate(now, loaded, this.bitrateInterval);\r\n      item.progressContainer.updateProgress(now, loaded, this.progressInterval);\r\n    }\r\n  }\r\n\r\n  public updateOverallProgress(\r\n    progressContainer: IProgressContainer,\r\n    transferType: TransferType,\r\n    progress: number\r\n  ): void {\r\n    const now: number = this.dateUtil.now();\r\n    const loaded: number = progressContainer.total * progress;\r\n    // this.logger.log('total: ' + progressContainer.total + ' progress: ' + progress + ' loaded: ' + loaded);\r\n    progressContainer.updateBitrate(now, loaded, this.bitrateInterval);\r\n    progressContainer.updateProgress(now, loaded, this.progressInterval);\r\n    if (progressContainer.total > 0 && loaded >= progressContainer.total) {\r\n      switch (transferType) {\r\n        case TransferType.Upload:\r\n          document.dispatchEvent(\r\n            new CustomEvent(\r\n              CustomEventTypeExtensions.toString(\r\n                CustomEventType.UPLOAD_COMPLETED\r\n              )\r\n            )\r\n          );\r\n          break;\r\n        case TransferType.Download:\r\n          document.dispatchEvent(\r\n            new CustomEvent(\r\n              CustomEventTypeExtensions.toString(\r\n                CustomEventType.DOWNLOAD_COMPLETED\r\n              )\r\n            )\r\n          );\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  public updateOverallSize(\r\n    progressContainer: IProgressContainer,\r\n    size: number\r\n  ): void {\r\n    progressContainer.reset(size);\r\n  }\r\n\r\n  public download(filename: string, url: string, sizeInBytes: number): void {\r\n    this.downloader.download(filename, url, sizeInBytes);\r\n  }\r\n\r\n  public export(exportType: string): void {\r\n    this.exportService.export(exportType);\r\n  }\r\n\r\n  public getStatusClass(status: TransferStatus): string {\r\n    switch (status) {\r\n      case TransferStatus.Ready:\r\n        return \"add_circle_outline\";\r\n      case TransferStatus.Uploading:\r\n        return \"arrow_upward\";\r\n      case TransferStatus.Downloading:\r\n        return \"arrow_downward\";\r\n      case TransferStatus.Failed:\r\n        return \"error_outline\";\r\n      case TransferStatus.Queued:\r\n      case TransferStatus.Preprocessing:\r\n        return \"schedule\";\r\n      case TransferStatus.Finished:\r\n        return \"done_all\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  }\r\n\r\n  public showStartButton(): boolean {\r\n    return (\r\n      this.store.count > 0 &&\r\n      !this.uploader.isWorking() &&\r\n      !this.downloader.isWorking()\r\n    );\r\n  }\r\n\r\n  public showPauseButton(): boolean {\r\n    return this.uploader.isWorking();\r\n  }\r\n\r\n  public showRemoveButton(): boolean {\r\n    return this.store.count > 0;\r\n  }\r\n\r\n  public showRetryButton(): boolean {\r\n    return (\r\n      this.store.failedCount > 0 &&\r\n      !this.uploader.isWorking() &&\r\n      !this.downloader.isWorking()\r\n    );\r\n  }\r\n\r\n  public showRetryButtonByItem(item: IDatatransferItem): boolean {\r\n    return item.status === TransferStatus.Failed;\r\n  }\r\n\r\n  public showExportButton(): boolean {\r\n    return this.store.count > 0;\r\n  }\r\n\r\n  public showPreprocessingCheckbox(): boolean {\r\n    return (\r\n      this.store.count > 0 && ConfigService.settings.core.preprocessHashEnabled\r\n    );\r\n  }\r\n\r\n  public showPreprocessingTooltip(): boolean {\r\n    return (\r\n      this.showPreprocessingCheckbox() &&\r\n      !!ConfigService.settings.core.preprocessHashTooltipContent\r\n    );\r\n  }\r\n\r\n  public showSpinner(item: IDatatransferItem): boolean {\r\n    return (\r\n      item.preprocessContainer.percent > 0 &&\r\n      item.status === TransferStatus.Preprocessing\r\n    );\r\n  }\r\n\r\n  public showProgressbar(item: IDatatransferItem): boolean {\r\n    return (\r\n      item.progressContainer.percent > 0 &&\r\n      (item.status === TransferStatus.Uploading ||\r\n        item.status === TransferStatus.Downloading)\r\n    );\r\n  }\r\n\r\n  public showPath(items: IDatatransferItem[], index: number): boolean {\r\n    if (index > 0 && items.length > index) {\r\n      const currentPath = items[index].path;\r\n      // don't show if previous path is same as current\r\n      return items[index - 1].path !== currentPath;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  public showEditDialog(item: IDatatransferItem): boolean {\r\n    let result = false;\r\n    if (item) {\r\n      switch (item.transferType) {\r\n        case TransferType.Upload:\r\n          if (item.status === TransferStatus.Ready) {\r\n            result = true;\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public editPath(\r\n    item: IDatatransferItem,\r\n    oldPath: string,\r\n    newPath: string\r\n  ): void {\r\n    switch (item.transferType) {\r\n      case TransferType.Upload:\r\n        // replace all \\ with /\r\n        let cleanedPath = newPath.replace(/\\\\/g, \"/\");\r\n        // replace repeated / with one\r\n        cleanedPath = cleanedPath.replace(/\\/+/g, \"/\");\r\n        if (cleanedPath.startsWith(\"/\")) {\r\n          cleanedPath = cleanedPath.slice(1);\r\n        }\r\n        if (cleanedPath && !cleanedPath.endsWith(\"/\")) {\r\n          cleanedPath += \"/\";\r\n        }\r\n        this.uploader.editPath(oldPath, cleanedPath);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  public editFilename(item: IDatatransferItem, name: string): void {\r\n    switch (item.transferType) {\r\n      case TransferType.Upload:\r\n        this.uploader.editFilename(item, name);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  public parseMessage(item: IDatatransferItem): string {\r\n    if (ConfigService.settings.core.parseMessageCallback instanceof Function) {\r\n      return ConfigService.settings.core.parseMessageCallback(item.message);\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n}\r\n","export enum ExportType {\r\n    CSV,\r\n    JSON\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { LoggerService } from '../../services/logger.service';\r\nimport { DatatransferStore } from '../../stores/datatransfer.store';\r\n\r\nexport interface IExporter {\r\n    export(): void;\r\n}\r\n\r\n@Injectable()\r\nexport abstract class BaseExporter implements IExporter {\r\n\r\n    constructor(protected logger: LoggerService, protected store: DatatransferStore) {\r\n\r\n    }\r\n\r\n    public abstract export(): void;\r\n\r\n    protected download(content, fileName, mimeType): void {\r\n        let a = document.createElement('a');\r\n        mimeType = mimeType || 'application/octet-stream';\r\n\r\n        if (navigator.msSaveBlob) { // IE10\r\n            navigator.msSaveBlob(new Blob([content], {\r\n                type: mimeType\r\n            }), fileName);\r\n        } else if (URL && 'download' in a) {\r\n            a.href = URL.createObjectURL(new Blob([content], {\r\n                type: mimeType\r\n            }));\r\n            a.setAttribute('download', fileName);\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        } else {\r\n            location.href = 'data:application/octet-stream,' + encodeURIComponent(content); // only this mime type is supported\r\n        }\r\n    }\r\n\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { BaseExporter } from \"./base.exporter\";\r\nimport { LoggerService } from \"../../services/logger.service\";\r\nimport { DatatransferStore } from \"../../stores/datatransfer.store\";\r\n\r\n@Injectable()\r\nexport class CsvExporter extends BaseExporter {\r\n  constructor(\r\n    protected logger: LoggerService,\r\n    protected store: DatatransferStore\r\n  ) {\r\n    super(logger, store);\r\n  }\r\n\r\n  public export(): void {\r\n    let csvContent = \"id,name,path,status,size,message\\n\";\r\n    const items = this.store.getItems();\r\n    items.forEach((item, index) => {\r\n      const itemString =\r\n        item.id +\r\n        \",\" +\r\n        item.name +\r\n        \",\" +\r\n        item.path +\r\n        \",\" +\r\n        item.getStatusName() +\r\n        \",\" +\r\n        item.sizeContainer.displaySize +\r\n        \" \" +\r\n        item.sizeContainer.displayUnit +\r\n        \",\" +\r\n        item.message;\r\n\r\n      csvContent += index < items.length ? itemString + \"\\n\" : itemString;\r\n    });\r\n\r\n    this.download(csvContent, \"export.csv\", \"text/csv;encoding:utf-8\");\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { BaseExporter } from \"./base.exporter\";\r\nimport { LoggerService } from \"../../services/logger.service\";\r\nimport { DatatransferStore } from \"../../stores/datatransfer.store\";\r\n\r\n@Injectable()\r\nexport class JsonExporter extends BaseExporter {\r\n  constructor(\r\n    protected logger: LoggerService,\r\n    protected store: DatatransferStore\r\n  ) {\r\n    super(logger, store);\r\n  }\r\n\r\n  public export(): void {\r\n    const content = [];\r\n    const items = this.store.getItems();\r\n    items.forEach((item, index) => {\r\n      content.push({\r\n        id: item.id,\r\n        name: item.name,\r\n        path: item.path,\r\n        status: item.getStatusName(),\r\n        size:\r\n          item.sizeContainer.displaySize + \" \" + item.sizeContainer.displayUnit,\r\n        message: item.message,\r\n      });\r\n    });\r\n\r\n    this.download(\r\n      JSON.stringify(content, null, \"\\t\"),\r\n      \"export.json\",\r\n      \"text/json;encoding:utf-8\"\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { CsvExporter } from '../io/exporters/csv.exporter';\r\nimport { JsonExporter } from '../io/exporters/json.exporter';\r\nimport { ExportType } from '../enums/export-type.enum';\r\n\r\n@Injectable()\r\nexport class ExportService {\r\n\r\n    constructor(private csvExporter: CsvExporter, private jsonExporter: JsonExporter) {\r\n\r\n    }\r\n\r\n    public export(exportType: string): void {\r\n        let castedExportType: ExportType = ExportType[exportType];\r\n        switch (castedExportType) {\r\n            case ExportType.CSV:\r\n                this.csvExporter.export();\r\n                break;\r\n            case ExportType.JSON:\r\n                this.jsonExporter.export();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n}\r\n","export interface IPreprocessContainer {\r\n    percent: number; // 0-100\r\n    pause(pause: boolean): void;\r\n    isPaused(): boolean;\r\n    cancel(cancel: boolean): void;\r\n    isCancelled(): boolean;\r\n    doWork(): void;\r\n    run(): void;\r\n}\r\n\r\nexport class PreprocessContainer implements IPreprocessContainer {\r\n    public percent: number;\r\n\r\n    private _isPaused: boolean;\r\n    private _isCancelled: boolean;\r\n\r\n    public constructor(init?: Partial<PreprocessContainer>) {\r\n        this.percent = 0;\r\n        this._isPaused = false;\r\n        this._isCancelled = false;\r\n        Object.assign(this, init);\r\n    }\r\n\r\n    public pause(pause: boolean): void {\r\n        this._isPaused = pause;\r\n    }\r\n\r\n    public isPaused(): boolean {\r\n        return this._isPaused;\r\n    }\r\n\r\n    public cancel(cancel: boolean): void {\r\n        this._isCancelled = cancel;\r\n    }\r\n\r\n    public isCancelled(): boolean {\r\n        return this._isCancelled;\r\n    }\r\n\r\n    public doWork(): void {\r\n\r\n    }\r\n\r\n    public run(): void {\r\n        this._isPaused = false;\r\n        this.doWork();\r\n    }\r\n}\r\n","export enum HashType {\r\n    MD5,\r\n    SHA1\r\n}\r\n\r\nexport enum HashTypeImplementation {\r\n    Internal,\r\n    CryptoBrowserify\r\n}\r\n\r\n// tslint:disable-next-line: no-namespace\r\nexport namespace HashTypeExtensions {\r\n    export function toString(hashTypeImplementation: HashTypeImplementation, hashType: HashType): string {\r\n        switch (hashType) {\r\n            case HashType.MD5:\r\n                return 'md5';\r\n            case HashType.SHA1:\r\n                return 'sha1';\r\n            default:\r\n                return 'sha1';\r\n        }\r\n    }\r\n    export function toEnum(hashTypeImplementation: HashTypeImplementation, hashType: string): HashType {\r\n        switch (hashType) {\r\n            case 'md5':\r\n                return HashType.MD5;\r\n            case 'sha1':\r\n                return HashType.SHA1;\r\n            default:\r\n                return HashType.SHA1;\r\n        }\r\n    }\r\n}\r\n","export enum EncodingType {\r\n    Latin1,\r\n    Hex,\r\n    Base64,\r\n    UTF8\r\n}\r\n\r\nexport enum EncodingTypeImplementation {\r\n    Internal,\r\n    CryptoBrowserify\r\n}\r\n\r\n// tslint:disable-next-line: no-namespace\r\nexport namespace EncodingTypeExtensions {\r\n    export function toString(encodingTypeImplementation: EncodingTypeImplementation, encodingType: EncodingType): string {\r\n        switch (encodingType) {\r\n            case EncodingType.Latin1:\r\n                return 'latin1';\r\n            case EncodingType.Hex:\r\n                return 'hex';\r\n            case EncodingType.Base64:\r\n                return 'base64';\r\n            case EncodingType.UTF8:\r\n                return 'utf8';\r\n            default:\r\n                return 'hex';\r\n        }\r\n    }\r\n    export function toEnum(encodingTypeImplementation: EncodingTypeImplementation, encodingType: string): EncodingType {\r\n        switch (encodingType) {\r\n            case 'latin1':\r\n                return EncodingType.Latin1;\r\n            case 'hex':\r\n                return EncodingType.Hex;\r\n            case 'base64':\r\n                return EncodingType.Base64;\r\n            case 'utf8':\r\n                return EncodingType.UTF8;\r\n            default:\r\n                return EncodingType.Hex;\r\n        }\r\n    }\r\n}\r\n","import { IPreprocessContainer, PreprocessContainer } from './preprocess-container.model';\r\nimport { HashType, HashTypeImplementation, HashTypeExtensions } from '../enums/hash-type.enum';\r\nimport { EncodingType, EncodingTypeImplementation, EncodingTypeExtensions } from '../enums/encoding-type.enum';\r\n\r\nexport interface IHashContainer extends IPreprocessContainer {\r\n    file: File;\r\n    hashType: HashType;\r\n    hashTypeString: string;\r\n    encodingType: EncodingType;\r\n    encodingTypeString: string;\r\n    inputEncodingType: EncodingType;\r\n    inputEncodingTypeString: string;\r\n    startDate: Date;\r\n    endDate: Date;\r\n    hash: any;\r\n    hashString: string;\r\n    reader: FileReader;\r\n}\r\n\r\nexport interface IStreamHashContainer extends IHashContainer {\r\n    chunkSize: number;\r\n    offset: number;\r\n}\r\n\r\nexport class HashContainer extends PreprocessContainer implements IHashContainer {\r\n    public file: File;\r\n    public hashType: HashType;\r\n    public hashTypeString: string;\r\n    public encodingType: EncodingType;\r\n    public encodingTypeString: string;\r\n    public inputEncodingType: EncodingType;\r\n    public inputEncodingTypeString: string;\r\n    public startDate: Date;\r\n    public endDate: Date;\r\n    public hash: any;\r\n    public hashString: string;\r\n    public reader: FileReader;\r\n\r\n    public constructor(file: File, hashTypeImplementation: HashTypeImplementation, encodingTypeImplementation: EncodingTypeImplementation,\r\n                       hashType: HashType, encodingType: EncodingType, inputEncodingType: EncodingType) {\r\n        super();\r\n        this.file = file;\r\n        this.hashType = hashType;\r\n        this.hashTypeString = HashTypeExtensions.toString(hashTypeImplementation, hashType);\r\n        this.encodingType = encodingType;\r\n        this.encodingTypeString = EncodingTypeExtensions.toString(encodingTypeImplementation, encodingType);\r\n        this.inputEncodingType = inputEncodingType;\r\n        this.inputEncodingTypeString = EncodingTypeExtensions.toString(encodingTypeImplementation, inputEncodingType);\r\n        this.startDate = new Date();\r\n        this.endDate = new Date();\r\n        this.reader = new FileReader();\r\n    }\r\n}\r\n\r\nexport class StreamHashContainer extends HashContainer implements IStreamHashContainer {\r\n    public chunkSize: number;\r\n    public offset: number;\r\n\r\n    public constructor(file: File, hashTypeImplementation: HashTypeImplementation, encodingTypeImplementation: EncodingTypeImplementation,\r\n                       hashType: HashType, encodingType: EncodingType, inputEncodingType: EncodingType) {\r\n        super(file, hashTypeImplementation, encodingTypeImplementation, hashType, encodingType, inputEncodingType);\r\n        this.chunkSize = 0;\r\n        this.offset = 0;\r\n    }\r\n\r\n    public cancel(cancel: boolean): void {\r\n        super.cancel(cancel);\r\n        this.offset = 0;\r\n    }\r\n}\r\n","import { IDatatransferItem } from '../models/datatransfer-item.model';\r\nimport { ConfigService } from '../services/config.service';\r\nimport { LoggerService } from '../services/logger.service';\r\nimport { GuidUtil } from '../utils/guid.util';\r\nimport { CryptoService } from '../services/crypto.service';\r\nimport { TransferStatus } from '../enums/transfer-status.enum';\r\nimport { TransferType } from '../enums/transfer-type.enum';\r\nimport { IStreamHashContainer, StreamHashContainer } from '../models/hash-container.model';\r\nimport { HashTypeImplementation, HashTypeExtensions } from '../enums/hash-type.enum';\r\nimport { EncodingTypeImplementation, EncodingTypeExtensions } from '../enums/encoding-type.enum';\r\n\r\nexport interface IDatatransfer {\r\n    on(event: string, callback: Function): void;\r\n    isWorking(): boolean;\r\n    startAll(): void;\r\n    pauseAll(): void;\r\n    removeAll(): void;\r\n    addItem(item: IDatatransferItem): void;\r\n    removeItem(item: IDatatransferItem): void;\r\n    retryItem(item: IDatatransferItem): void;\r\n}\r\n\r\nexport abstract class BaseDatatransfer implements IDatatransfer {\r\n\r\n    private events = [];\r\n    protected _isWorking = false;\r\n\r\n    constructor(protected logger: LoggerService,\r\n                protected guidUtil: GuidUtil,\r\n                protected cryptoService: CryptoService) {\r\n    }\r\n\r\n    public on(event: string, callback: Function): void {\r\n        this.events.push(event.toLowerCase(), callback);\r\n    }\r\n\r\n    protected fire(...args: any[]): void {\r\n        const event = args[0].toLowerCase();\r\n        // Find event listeners, and support pseudo-event `catchAll`\r\n        for (let i = 0; i <= this.events.length; i += 2) {\r\n            if (this.events[i] === event) {\r\n                this.events[i + 1].apply(this, args.slice(1));\r\n            }\r\n            if (this.events[i] === 'catchall') {\r\n                this.events[i + 1].apply(null, args);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected updateZone(): void {\r\n        this.fire('zoneUpdated');\r\n    }\r\n\r\n    protected changeItemStatus(item: IDatatransferItem, status: TransferStatus, message?: string) {\r\n        this.fire('itemStatusChanged', item, status, message);\r\n    }\r\n\r\n    protected updateItemProgress(item: IDatatransferItem, progress: number): void {\r\n        this.fire('itemProgressUpdated', item, progress);\r\n    }\r\n\r\n    protected updateOverallProgress(transferType: TransferType, progress: number): void {\r\n        this.fire('overallProgressUpdated', transferType, progress);\r\n    }\r\n\r\n    protected updateOverallSize(size: number): void {\r\n        this.fire('overallSizeUpdated', size);\r\n    }\r\n\r\n    public isWorking(): boolean {\r\n        return this._isWorking;\r\n    }\r\n\r\n    public abstract startAll(): void;\r\n\r\n    public abstract pauseAll(): void;\r\n\r\n    public abstract removeAll(): void;\r\n\r\n    public addItem(item: IDatatransferItem): void {\r\n        this.fire('itemAdded', item);\r\n    }\r\n\r\n    public abstract removeItem(item: IDatatransferItem): void;\r\n\r\n    public abstract retryItem(item: IDatatransferItem): void;\r\n\r\n    protected generateUniqueIdentifier(): string {\r\n        return this.guidUtil.createGuid();\r\n    }\r\n\r\n    protected preprocessHash(item: IDatatransferItem, file: File, continueCallback: Function, cancelCallback: Function): void {\r\n        const successCallback = function(container: IStreamHashContainer) {\r\n            const that = this as BaseDatatransfer;\r\n            if (container.hashString) {\r\n                // const seconds = (container.endDate.getTime() - container.startDate.getTime()) / 1000;\r\n                // console.log('file hashing took ' + seconds + ' seconds');\r\n\r\n                const xhr = new XMLHttpRequest();\r\n\r\n                const responseHandler = function(e) {\r\n                    // ignore response if container has been cancelled\r\n                    if (!container.isCancelled()) {\r\n                        if (xhr.status === 200) {\r\n                            item.message = xhr.responseText;\r\n                            cancelCallback();\r\n                        } else {\r\n                            continueCallback();\r\n                        }\r\n                    }\r\n                };\r\n                xhr.addEventListener('load', responseHandler, false);\r\n                xhr.addEventListener('error', responseHandler, false);\r\n                xhr.addEventListener('timeout', responseHandler, false);\r\n\r\n                let params = [];\r\n                params = params.concat(\r\n                    [\r\n                        [ConfigService.settings.core.preprocessHashParameterName, container.hashString],\r\n                        [ConfigService.settings.core.preprocessHashFileNameParameterName, item.name]\r\n                    ]\r\n                        .map(function(pair) {\r\n                            return [\r\n                                pair[0], encodeURIComponent(pair[1])\r\n                            ].join('=');\r\n                        })\r\n                );\r\n\r\n                xhr.open(ConfigService.settings.core.preprocessHashMethod, ConfigService.settings.core.getTarget('preprocessHash', params));\r\n                xhr.send(null);\r\n\r\n            } else {\r\n                continueCallback();\r\n            }\r\n        }.bind(this);\r\n        const errorCallback = function(event: any, container: IStreamHashContainer) {\r\n            console.log(event);\r\n            continueCallback();\r\n        };\r\n\r\n        if (!item.preprocessContainer.isCancelled() && item.preprocessContainer instanceof StreamHashContainer) {\r\n            // continue\r\n        } else {\r\n            const hashType = HashTypeExtensions.toEnum(\r\n                HashTypeImplementation.Internal, ConfigService.settings.core.preprocessHashFunctionName);\r\n            const encodingType = EncodingTypeExtensions.toEnum(\r\n                EncodingTypeImplementation.Internal, ConfigService.settings.core.preprocessHashEncodingName);\r\n            const inputEncodingType = EncodingTypeExtensions.toEnum(\r\n                EncodingTypeImplementation.Internal, ConfigService.settings.core.preprocessHashInputEncodingName);\r\n\r\n            item.preprocessContainer = this.cryptoService.createStreamHashContainer(\r\n                file, hashType, encodingType, inputEncodingType, successCallback, errorCallback);\r\n        }\r\n\r\n        // wait for the initial mat-progress-spinner animation to complete\r\n        setTimeout(function() {\r\n            item.preprocessContainer.run();\r\n        }, 1000);\r\n    }\r\n}\r\n","import { IDatatransfer, BaseDatatransfer } from '../datatransfer.io';\r\nimport { IDatatransferItem } from '../../models/datatransfer-item.model';\r\nimport { TransferType } from '../../enums/transfer-type.enum';\r\nimport { LoggerService } from '../../services/logger.service';\r\nimport { GuidUtil } from '../../utils/guid.util';\r\nimport { CryptoService } from '../../services/crypto.service';\r\n\r\nexport interface IUploader extends IDatatransfer {\r\n    assignBrowse(element: any, isDirectory: any): void;\r\n    assignDrop(element: any): void;\r\n    editPath(oldPath: string, newPath: string): void;\r\n    editFilename(item: IDatatransferItem, name: string): void;\r\n}\r\n\r\nexport abstract class BaseUploader extends BaseDatatransfer {\r\n\r\n    private filenameRegExp = new RegExp('[\\/\\\\\\\\*?\"<>:|]');\r\n    private pathRegExp = new RegExp('[*?\"<>:|]');\r\n    protected transferType = TransferType.Upload;\r\n\r\n    constructor(protected logger: LoggerService,\r\n                protected guidUtil: GuidUtil,\r\n                protected cryptoService: CryptoService) {\r\n        super(logger, guidUtil, cryptoService);\r\n    }\r\n\r\n    public abstract assignBrowse(element: any, isDirectory: any): void;\r\n\r\n    public abstract assignDrop(element: any): void;\r\n\r\n    public editPath(oldPath: string, newPath: string): void {\r\n        if (this.pathRegExp.test(newPath)) {\r\n            throw new Error('A path cannot contain any of the following characters: * ? \" < > : |');\r\n        }\r\n    }\r\n\r\n    public editFilename(item: IDatatransferItem, name: string): void {\r\n        if (!item) {\r\n            throw new Error('Cannot edit the filename.');\r\n        }\r\n        if (!name) {\r\n            throw new Error('Empty filename is not allowed.');\r\n        }\r\n        if (this.filenameRegExp.test(name)) {\r\n            throw new Error('A filename cannot contain any of the following characters: \\\\ / * ? \" < > : |');\r\n        }\r\n    }\r\n}\r\n","import { ISizeContainer, SizeContainer } from './size-container.model';\r\nimport { TransferType } from '../enums/transfer-type.enum';\r\nimport { TransferStatus } from '../enums/transfer-status.enum';\r\nimport { IPreprocessContainer, PreprocessContainer } from './preprocess-container.model';\r\nimport { IProgressContainer, ProgressContainer } from './progress-container.model';\r\n\r\nexport interface IDatatransferItem {\r\n  id: string;\r\n  name: string;\r\n  path: string;\r\n  displayPath: string;\r\n  sizeContainer: ISizeContainer;\r\n  transferType: TransferType;\r\n  status: TransferStatus;\r\n  preprocessContainer: IPreprocessContainer;\r\n  progressContainer: IProgressContainer;\r\n  message?: string;\r\n  isSelected?: boolean;\r\n  externalItem?: any;\r\n  getStatusName(): string;\r\n  getTransferTypeName(): string;\r\n}\r\n\r\nexport class DatatransferItem implements IDatatransferItem {\r\n  public id: string;\r\n  public name: string;\r\n  private _path: string;\r\n  get path(): string {\r\n    return this._path;\r\n  }\r\n  set path(newPath: string) {\r\n      this._path = newPath;\r\n      this.displayPath = newPath;\r\n      if (this.displayPath) {\r\n        // remove last character\r\n        if (this.displayPath.endsWith('/')) {\r\n          this.displayPath = this.displayPath.slice(0, -1);\r\n        }\r\n        // replace all '/' with ' > '\r\n        this.displayPath = this.displayPath.replace(/\\//g, ' > ');\r\n      }\r\n  }\r\n  public displayPath: string;\r\n  public sizeContainer: ISizeContainer;\r\n  public transferType: TransferType;\r\n  public status: TransferStatus;\r\n  public preprocessContainer: IPreprocessContainer;\r\n  public progressContainer: IProgressContainer;\r\n  private _message; string;\r\n  get message(): string {\r\n    return this._message;\r\n  }\r\n  set message(newMessage: string) {\r\n    this._message = newMessage.toLowerCase().startsWith('<!doctype html') ? undefined : newMessage;\r\n  }\r\n  public isSelected?: boolean;\r\n  public externalItem?: any;\r\n\r\n  public constructor(init?: Partial<DatatransferItem>) {\r\n    this.sizeContainer = new SizeContainer();\r\n    this.preprocessContainer = new PreprocessContainer();\r\n    this.progressContainer = new ProgressContainer(0);\r\n    Object.assign(this, init);\r\n  }\r\n\r\n  public getStatusName(): string {\r\n    return TransferStatus[this.status];\r\n  }\r\n\r\n  public getTransferTypeName(): string {\r\n    return TransferType[this.transferType];\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class GuidUtil {\r\n    public createGuid(): string {\r\n        function s4() {\r\n            return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n        }\r\n        return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\r\n    }\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport * as cryptoBrowserify from 'crypto-browserify';\r\nimport { HashTypeImplementation, HashType } from '../enums/hash-type.enum';\r\nimport { EncodingTypeImplementation, EncodingType } from '../enums/encoding-type.enum';\r\nimport { IHashContainer, HashContainer, IStreamHashContainer, StreamHashContainer } from '../models/hash-container.model';\r\nimport { FileReaderEvent } from '../extensions/file-reader.extension';\r\n\r\n@Injectable()\r\nexport class CryptoService {\r\n\r\n    // hash 4MB at a time\r\n    private readonly STREAM_HASH_CHUNK_SIZE = 1024 * 1000 * 4;\r\n    private readonly HASH_TYPE_IMPLEMENTATION = HashTypeImplementation.CryptoBrowserify;\r\n    private readonly ENCODING_TYPE_IMPLEMENTATION = EncodingTypeImplementation.CryptoBrowserify;\r\n\r\n    constructor(private zone: NgZone) {\r\n        // Performance remains unchanged by running the hash function outside of Angular.\r\n        // this.zone.runOutsideAngular(() => { }\r\n    }\r\n\r\n    public createHashContainer(file: File, hashType: HashType, encodingType: EncodingType,\r\n                               inputEncodingType: EncodingType): IHashContainer {\r\n\r\n        const container = new HashContainer(\r\n            file,\r\n            this.HASH_TYPE_IMPLEMENTATION,\r\n            this.ENCODING_TYPE_IMPLEMENTATION,\r\n            hashType,\r\n            encodingType,\r\n            inputEncodingType);\r\n\r\n        container.hash = cryptoBrowserify.createHash(container.hashTypeString);\r\n\r\n        container.reader.onload = function(event: FileReaderEvent) {\r\n            container.hashString = container.hash.update(event.target.result, container.inputEncodingTypeString)\r\n                .digest(container.encodingTypeString);\r\n            container.endDate = new Date();\r\n            container.percent = 100;\r\n        }.bind(container);\r\n\r\n        container.doWork = function() {\r\n            container.reader.readAsBinaryString(container.file);\r\n        };\r\n\r\n        return container;\r\n    }\r\n\r\n    public createStreamHashContainer(file: File, hashType: HashType, encodingType: EncodingType, inputEncodingType: EncodingType,\r\n                                     successCallback: Function, errorCallback: Function): IStreamHashContainer {\r\n\r\n        const container = new StreamHashContainer(\r\n            file,\r\n            this.HASH_TYPE_IMPLEMENTATION,\r\n            this.ENCODING_TYPE_IMPLEMENTATION,\r\n            hashType,\r\n            encodingType,\r\n            inputEncodingType);\r\n\r\n        container.chunkSize = this.STREAM_HASH_CHUNK_SIZE;\r\n        container.offset = 0;\r\n        container.hash = cryptoBrowserify.createHash(container.hashTypeString);\r\n\r\n        container.reader.onload = function(event: FileReaderEvent) {\r\n            const binary = event.target.result;\r\n\r\n            if (container.offset + container.chunkSize >= container.file.size) {\r\n                container.hash.end(binary, container.inputEncodingTypeString);\r\n            } else {\r\n                container.hash.write(binary, container.inputEncodingTypeString);\r\n            }\r\n\r\n            container.offset += container.chunkSize;\r\n\r\n            container.doWork();\r\n        }.bind(container);\r\n\r\n        container.reader.onerror = function(event) {\r\n            errorCallback(event, container);\r\n        };\r\n\r\n        container.doWork = function() {\r\n            if (!container.isCancelled() && !container.isPaused()) {\r\n                if (container.offset > container.file.size) {\r\n                    container.hashString = container.hash.read().toString(container.encodingTypeString);\r\n                    container.endDate = new Date();\r\n                    container.percent = 100;\r\n                    successCallback(container);\r\n                    return;\r\n                }\r\n\r\n                const slice = container.file.slice(container.offset, container.offset + container.chunkSize);\r\n                container.reader.readAsBinaryString(slice);\r\n                container.percent = Math.round(container.offset / file.size * 100);\r\n            }\r\n        };\r\n\r\n        return container;\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport * as Resumable from 'resumablejs';\r\nimport { BaseUploader } from './base.uploader';\r\nimport { ConfigService } from '../../services/config.service';\r\nimport { LoggerService } from '../../services/logger.service';\r\nimport { GuidUtil } from '../../utils/guid.util';\r\nimport { CryptoService } from '../../services/crypto.service';\r\nimport { TransferStatus } from '../../enums/transfer-status.enum';\r\nimport { DatatransferItem, IDatatransferItem } from '../../models/datatransfer-item.model';\r\nimport { SizeContainer } from '../../models/size-container.model';\r\nimport { DecimalByteUnit } from '../../enums/decimal-byte-unit.enum';\r\nimport { ProgressContainer } from '../../models/progress-container.model';\r\nimport { TransferType } from '../../enums/transfer-type.enum';\r\n\r\n@Injectable()\r\nexport class ResumableJsUploader extends BaseUploader {\r\n\r\n    private r: Resumable.Resumable = undefined;\r\n    private preprocessFileFn = undefined;\r\n    private preprocessChunkFn = undefined;\r\n\r\n    constructor(protected logger: LoggerService,\r\n                protected guidUtil: GuidUtil,\r\n                protected cryptoService: CryptoService) {\r\n        super(logger, guidUtil, cryptoService);\r\n        this.initResumable();\r\n    }\r\n\r\n    private initResumable(): void {\r\n        function generateId(file, event) {\r\n            const that = this as ResumableJsUploader;\r\n            return that.generateUniqueIdentifier();\r\n        }\r\n\r\n        function preprocessChunkInlineFn(resumableChunk) {\r\n            const that = this as ResumableJsUploader;\r\n            if (typeof that.preprocessChunkFn === 'function') {\r\n                that.preprocessChunkFn(resumableChunk);\r\n            } else {\r\n                resumableChunk.preprocessFinished();\r\n            }\r\n        }\r\n\r\n        function preprocessFileInlineFn(resumableFile) {\r\n            const that = this as ResumableJsUploader;\r\n            if (typeof that.preprocessFileFn === 'function') {\r\n                that.changeItemStatus(resumableFile.internalItem, TransferStatus.Preprocessing);\r\n                that.preprocessFileFn(resumableFile);\r\n            } else {\r\n                if (ConfigService.settings.core.preprocessHashEnabled && ConfigService.settings.core.preprocessHashChecked) {\r\n                    that.changeItemStatus(resumableFile.internalItem, TransferStatus.Preprocessing);\r\n                    const continueCallback = function() {\r\n                        resumableFile.preprocessFinished();\r\n                    };\r\n                    const cancelCallback = function() {\r\n                        resumableFile.cancel();\r\n                        that.changeItemStatus(resumableFile.internalItem, TransferStatus.Finished, resumableFile.internalItem.message);\r\n                        that.r.uploadNextChunk();\r\n                    };\r\n                    that.preprocessHash(resumableFile.internalItem, resumableFile.file, continueCallback, cancelCallback);\r\n                } else {\r\n                    resumableFile.preprocessFinished();\r\n                }\r\n            }\r\n        }\r\n\r\n        ConfigService.settings.resumablejs.generateUniqueIdentifier = generateId.bind(this);\r\n\r\n        if (typeof ConfigService.settings.resumablejs.preprocess === 'function') {\r\n            // clones the function with '{}' acting as it's new 'this' parameter\r\n            this.preprocessChunkFn = ConfigService.settings.resumablejs.preprocess.bind({});\r\n        }\r\n        ConfigService.settings.resumablejs.preprocess = preprocessChunkInlineFn.bind(this);\r\n\r\n        if (typeof ConfigService.settings.resumablejs.preprocessFile === 'function') {\r\n            // clones the function with '{}' acting as it's new 'this' parameter\r\n            this.preprocessFileFn = ConfigService.settings.resumablejs.preprocessFile.bind({});\r\n        }\r\n        ConfigService.settings.resumablejs.preprocessFile = preprocessFileInlineFn.bind(this);\r\n\r\n        // @ts-ignore: ignore type checking\r\n        this.r = new Resumable(ConfigService.settings.resumablejs);\r\n\r\n        this.r.on('fileAdded', function(file, event) {\r\n            const that = this as ResumableJsUploader;\r\n            // that.logger.log('fileAdded', file);\r\n            const newItem = new DatatransferItem({\r\n                id: file.uniqueIdentifier,\r\n                name: file.fileName,\r\n                path: file.relativePath.substr(0, file.relativePath.length - file.fileName.length),\r\n                sizeContainer: new SizeContainer({ decimalByteUnit: DecimalByteUnit.Byte, decimalByteUnitSize: file.size }),\r\n                progressContainer: new ProgressContainer(file.size),\r\n                transferType: TransferType.Upload,\r\n                status: TransferStatus.Ready,\r\n                externalItem: file\r\n            });\r\n            file.internalItem = newItem;\r\n            that.addItem(newItem);\r\n        }.bind(this));\r\n        this.r.on('fileProgress', function(file, message) {\r\n            const that = this as ResumableJsUploader;\r\n            // that.logger.log('fileProgress', file.progress());\r\n            that.changeItemStatus(file.internalItem, TransferStatus.Uploading);\r\n            that.updateItemProgress(file.internalItem, file.progress());\r\n            that.updateOverallProgress(that.transferType, that.r.progress());\r\n        }.bind(this));\r\n        this.r.on('fileSuccess', function(file, message) {\r\n            const that = this as ResumableJsUploader;\r\n            // that.logger.log('fileSuccess', file);\r\n            that.changeItemStatus(file.internalItem, TransferStatus.Finished, message);\r\n        }.bind(this));\r\n        this.r.on('fileError', function(file, message) {\r\n            const that = this as ResumableJsUploader;\r\n            // that.logger.log('fileError', file, message);\r\n            that.changeItemStatus(file.internalItem, TransferStatus.Failed, message);\r\n        }.bind(this));\r\n        this.r.on('uploadStart', function() {\r\n            const that = this as ResumableJsUploader;\r\n            // that.logger.log('uploadStart', that.r);\r\n            that._isWorking = true;\r\n            that.updateZone();\r\n            that.updateOverallProgress(that.transferType, that.r.progress());\r\n            that.updateOverallSize(that.r.getSize());\r\n        }.bind(this));\r\n        this.r.on('chunkingComplete', function() {\r\n            const that = this as ResumableJsUploader;\r\n            // that.logger.log('chunkingComplete');\r\n        }.bind(this));\r\n        this.r.on('pause', function() {\r\n            const that = this as ResumableJsUploader;\r\n            // that.logger.log('pause');\r\n            that._isWorking = false;\r\n            that.updateZone();\r\n        }.bind(this));\r\n        this.r.on('cancel', function() {\r\n            const that = this as ResumableJsUploader;\r\n            // that.logger.log('cancel');\r\n            that._isWorking = false;\r\n            that.updateZone();\r\n        }.bind(this));\r\n        this.r.on('complete', function() {\r\n            const that = this as ResumableJsUploader;\r\n            // that.logger.log('complete', that.r);\r\n            that._isWorking = false;\r\n            that.updateZone();\r\n        }.bind(this));\r\n    }\r\n\r\n    public assignBrowse(element, isDirectory): void {\r\n        this.r.assignBrowse(element, isDirectory);\r\n    }\r\n\r\n    public assignDrop(element): void {\r\n        this.r.assignDrop(element);\r\n    }\r\n\r\n    public editPath(oldPath: string, newPath: string): void {\r\n        super.editPath(oldPath, newPath);\r\n        this.r.files.forEach((file: any, index) => {\r\n            const internalItem = file.internalItem as IDatatransferItem;\r\n            if (internalItem.status === TransferStatus.Ready && internalItem.path === oldPath) {\r\n                file.relativePath = newPath + file.fileName;\r\n                internalItem.path = newPath;\r\n            }\r\n        });\r\n    }\r\n\r\n    public editFilename(item: IDatatransferItem, name: string): void {\r\n        super.editFilename(item, name);\r\n        item.externalItem.fileName = name;\r\n        item.externalItem.relativePath = item.path + name;\r\n        item.name = name;\r\n    }\r\n\r\n    public startAll(): void {\r\n        this.r.upload();\r\n    }\r\n\r\n    public pauseAll(): void {\r\n        // reset preprocessState\r\n        this.r.files.forEach((file: any, index) => {\r\n            if (file.preprocessState === 1) {\r\n                file.preprocessState = 0;\r\n            }\r\n        });\r\n        this.r.pause();\r\n    }\r\n\r\n    public removeAll(): void {\r\n        const tempFiles = this.r.files.slice();\r\n        tempFiles.forEach((file: any, index) => {\r\n            const that = this as ResumableJsUploader;\r\n            that.r.removeFile(file);\r\n        });\r\n        this._isWorking = false;\r\n    }\r\n\r\n    public removeItem(item: IDatatransferItem): void {\r\n        this.r.removeFile(item.externalItem);\r\n        if (this.r.files.length <= 0) {\r\n            this._isWorking = false;\r\n        }\r\n    }\r\n\r\n    public retryItem(item: IDatatransferItem): void {\r\n        item.externalItem.retry();\r\n    }\r\n}\r\n","import { IDatatransfer, BaseDatatransfer } from '../datatransfer.io';\r\nimport { TransferType } from '../../enums/transfer-type.enum';\r\nimport { LoggerService } from '../../services/logger.service';\r\nimport { GuidUtil } from '../../utils/guid.util';\r\nimport { CryptoService } from '../../services/crypto.service';\r\n\r\nexport interface IDownloader extends IDatatransfer {\r\n    download(filename: string, url: string, sizeInBytes: number): void;\r\n}\r\n\r\nexport abstract class BaseDownloader extends BaseDatatransfer implements IDownloader {\r\n\r\n    protected transferType = TransferType.Download;\r\n\r\n    constructor(protected logger: LoggerService,\r\n                protected guidUtil: GuidUtil,\r\n                protected cryptoService: CryptoService) {\r\n        super(logger, guidUtil, cryptoService);\r\n    }\r\n\r\n    public abstract download(filename: string, url: string, sizeInBytes: number): void;\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class CommonUtil {\r\n    public each(o: any, callback: Function): void {\r\n        if (typeof (o.length) !== 'undefined') {\r\n            for (let i = 0; i < o.length; i++) {\r\n                // Array or FileList\r\n                if (callback(o[i]) === false) {\r\n                    return;\r\n                }\r\n            }\r\n        } else {\r\n            for (let i in o) {\r\n                // Object\r\n                if (callback(i, o[i]) === false) {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { saveAs } from \"file-saver\";\r\nimport { BaseDownloader } from \"./base.downloader\";\r\nimport {\r\n  IDatatransferItem,\r\n  DatatransferItem,\r\n} from \"../../models/datatransfer-item.model\";\r\nimport { ConfigService } from \"../../services/config.service\";\r\nimport { LoggerService } from \"../../services/logger.service\";\r\nimport { GuidUtil } from \"../../utils/guid.util\";\r\nimport { CryptoService } from \"../../services/crypto.service\";\r\nimport { CommonUtil } from \"../../utils/common.util\";\r\nimport { TransferStatus } from \"../../enums/transfer-status.enum\";\r\nimport { SizeContainer } from \"../../models/size-container.model\";\r\nimport { DecimalByteUnit } from \"../../enums/decimal-byte-unit.enum\";\r\nimport { ProgressContainer } from \"../../models/progress-container.model\";\r\nimport { TransferType } from \"../../enums/transfer-type.enum\";\r\n\r\n@Injectable()\r\nexport class BlobDownloader extends BaseDownloader {\r\n  private throttleProgressCallbacks = 0.1;\r\n  private files: IDatatransferItem[] = [];\r\n  private queue: IDatatransferItem[] = [];\r\n  private downloading: IDatatransferItem[] = [];\r\n\r\n  constructor(\r\n    protected logger: LoggerService,\r\n    protected guidUtil: GuidUtil,\r\n    protected cryptoService: CryptoService,\r\n    private commonUtil: CommonUtil\r\n  ) {\r\n    super(logger, guidUtil, cryptoService);\r\n  }\r\n\r\n  public startAll(): void {\r\n    if (!this.isWorking()) {\r\n      for (\r\n        let index = 0;\r\n        index < ConfigService.settings.core.simultaneousDownloads;\r\n        index++\r\n      ) {\r\n        this.downloadNext();\r\n      }\r\n    }\r\n  }\r\n\r\n  public pauseAll(): void {}\r\n\r\n  public removeAll(): void {\r\n    this.files.forEach((item, index) => {\r\n      const that = this as BlobDownloader;\r\n      that.abortDownload(item);\r\n    });\r\n    this.files.length = 0;\r\n    this.queue.length = 0;\r\n    this.downloading.length = 0;\r\n    this._isWorking = false;\r\n    this.updateOverallSize(this.getSize());\r\n    this.updateOverallProgress(this.transferType, this.getProgress());\r\n  }\r\n\r\n  public removeItem(item: IDatatransferItem): void {\r\n    this.abortDownload(item);\r\n    this.removeItemFromArray(item, this.files);\r\n    this.removeItemFromArray(item, this.queue);\r\n    this.removeItemFromArray(item, this.downloading);\r\n    this.downloadNext();\r\n  }\r\n\r\n  private removeItemFromArray(\r\n    item: IDatatransferItem,\r\n    array: IDatatransferItem[]\r\n  ): void {\r\n    for (let i = array.length - 1; i >= 0; i--) {\r\n      if (array[i] === item) {\r\n        array.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  public retryItem(item: IDatatransferItem): void {\r\n    this.abortDownload(item);\r\n    this.removeItemFromArray(item, this.queue);\r\n    this.removeItemFromArray(item, this.downloading);\r\n    this._isWorking = this.downloading.length > 0;\r\n    item.externalItem.progress = 0;\r\n    this.updateItemProgress(item, item.externalItem.progress);\r\n    this.changeItemStatus(item, TransferStatus.Queued);\r\n    this.queue.push(item);\r\n    this.initDownload(item);\r\n    this.downloadNext();\r\n  }\r\n\r\n  public download(filename: string, url: string, sizeInBytes: number): void {\r\n    const newItem = new DatatransferItem({\r\n      id: this.generateUniqueIdentifier(),\r\n      name: filename,\r\n      sizeContainer: new SizeContainer({\r\n        decimalByteUnit: DecimalByteUnit.Byte,\r\n        decimalByteUnitSize: sizeInBytes,\r\n      }),\r\n      progressContainer: new ProgressContainer(sizeInBytes),\r\n      transferType: TransferType.Download,\r\n      status: TransferStatus.Queued,\r\n      externalItem: {\r\n        url,\r\n        progress: 0,\r\n        size: sizeInBytes,\r\n        lastProgressCallback: new Date(),\r\n      },\r\n    });\r\n\r\n    this.addItem(newItem);\r\n    this.files.push(newItem);\r\n    this.queue.push(newItem);\r\n    this.initDownload(newItem);\r\n    this.downloadNext();\r\n  }\r\n\r\n  private initDownload(item: IDatatransferItem): void {\r\n    const xhr = new XMLHttpRequest();\r\n    item.externalItem.xhr = xhr;\r\n\r\n    xhr.open(ConfigService.settings.core.downloadMethod, item.externalItem.url);\r\n    xhr.timeout = ConfigService.settings.core.downloadXhrTimeout;\r\n    xhr.withCredentials = ConfigService.settings.core.downloadWithCredentials;\r\n\r\n    // Add data from header options\r\n    let customHeaders = ConfigService.settings.core.downloadHeaders;\r\n    if (typeof customHeaders === \"function\") {\r\n      customHeaders = customHeaders(item);\r\n    }\r\n    this.commonUtil.each(customHeaders, function (k: string, v: string) {\r\n      xhr.setRequestHeader(k, v);\r\n    });\r\n\r\n    xhr.responseType = \"blob\";\r\n    xhr.onloadstart = function (e) {\r\n      const that = this as BlobDownloader;\r\n      that.changeItemStatus(item, TransferStatus.Downloading);\r\n    }.bind(this);\r\n    xhr.onprogress = function (e) {\r\n      const that = this as BlobDownloader;\r\n      if (\r\n        new Date().getTime() -\r\n          item.externalItem.lastProgressCallback.getTime() >\r\n        that.throttleProgressCallbacks * 1000\r\n      ) {\r\n        item.externalItem.progress = e.loaded / e.total;\r\n        that.updateItemProgress(item, item.externalItem.progress);\r\n        that.updateOverallProgress(that.transferType, that.getProgress());\r\n        item.externalItem.lastProgressCallback = new Date();\r\n      }\r\n    }.bind(this);\r\n    xhr.onloadend = function (e) {\r\n      /*\r\n            Value\tState\tDescription\r\n            0\tUNSENT\tClient has been created. open() not called yet.\r\n            1\tOPENED\topen() has been called.\r\n            2\tHEADERS_RECEIVED\tsend() has been called, and headers and status are available.\r\n            3\tLOADING\tDownloading; responseText holds partial data.\r\n            4\tDONE\tThe operation is complete.\r\n            */\r\n      const that = this as BlobDownloader;\r\n      if (xhr.readyState === 4) {\r\n        item.externalItem.progress = 1;\r\n        that.updateItemProgress(item, item.externalItem.progress);\r\n        if (xhr.status === 200) {\r\n          that.changeItemStatus(item, TransferStatus.Finished);\r\n          if (ConfigService.settings.core.saveDownloadFileAs) {\r\n            ConfigService.settings.core.saveDownloadFileAs(\r\n              xhr.response,\r\n              item.name\r\n            );\r\n          } else {\r\n            saveAs(xhr.response, item.name);\r\n          }\r\n        } else if (xhr.status !== 0) {\r\n          // don't change status for aborted items\r\n          that.changeItemStatus(item, TransferStatus.Failed);\r\n        }\r\n        that.removeItemFromArray(item, that.downloading);\r\n        that.downloadNext();\r\n      }\r\n    }.bind(this);\r\n  }\r\n\r\n  private downloadNext(): void {\r\n    this.updateOverallSize(this.getSize());\r\n    this.updateOverallProgress(this.transferType, this.getProgress());\r\n    if (\r\n      this.downloading.length <\r\n      ConfigService.settings.core.simultaneousDownloads\r\n    ) {\r\n      const item = this.queue.shift();\r\n      if (!!item && !!item.externalItem && !!item.externalItem.xhr) {\r\n        this.changeItemStatus(item, TransferStatus.Downloading);\r\n        this.downloading.push(item);\r\n        this._isWorking = this.downloading.length > 0;\r\n        item.externalItem.xhr.send();\r\n      }\r\n    }\r\n  }\r\n\r\n  private abortDownload(item: IDatatransferItem): void {\r\n    if (!!item && !!item.externalItem && !!item.externalItem.xhr) {\r\n      item.externalItem.xhr.abort();\r\n      item.externalItem.xhr = null;\r\n    }\r\n  }\r\n\r\n  private getSize(): number {\r\n    let totalSize = 0;\r\n    this.files.forEach((file, index) => {\r\n      totalSize += file.externalItem.size;\r\n    });\r\n    return totalSize;\r\n  }\r\n\r\n  private getProgress(): number {\r\n    let totalDone = 0;\r\n    let totalSize = 0;\r\n    this.files.forEach((file, index) => {\r\n      let currentFileProgress = file.externalItem.progress;\r\n      if (file.status === TransferStatus.Failed) {\r\n        currentFileProgress = 1;\r\n      }\r\n      totalDone += currentFileProgress * file.externalItem.size;\r\n      totalSize += file.externalItem.size;\r\n    });\r\n    return totalSize > 0 ? totalDone / totalSize : 0;\r\n  }\r\n}\r\n","import { Injectable, NgZone } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { LoggerService } from \"../services/logger.service\";\r\nimport { DatatransferStore } from \"../stores/datatransfer.store\";\r\nimport { DateUtil } from \"../utils/date.util\";\r\nimport { PaginationService } from \"../services/pagination.service\";\r\nimport { ExportService } from \"../services/export.service\";\r\nimport { DatatransferFacade } from \"../facades/datatransfer.facade\";\r\nimport { ResumableJsUploader } from \"../io/uploaders/resumablejs.uploader\";\r\nimport { BlobDownloader } from \"../io/downloaders/blob.downloader\";\r\n\r\n@Injectable()\r\nexport class DatatransferFacadeFactory {\r\n  private facade1: DatatransferFacade;\r\n\r\n  constructor(\r\n    private logger: LoggerService,\r\n    private zone: NgZone,\r\n    private store: DatatransferStore,\r\n    private dateUtil: DateUtil,\r\n    private paginationService: PaginationService,\r\n    private exportService: ExportService,\r\n    private dialog: MatDialog,\r\n    private resumableUploader: ResumableJsUploader,\r\n    private blobDownloader: BlobDownloader\r\n  ) {}\r\n\r\n  // TODO: pass arguments to define which uploader/downloader implementation should be used\r\n  public createDatatransferFacade(): DatatransferFacade {\r\n    if (!this.facade1) {\r\n      this.facade1 = new DatatransferFacade(\r\n        this.logger,\r\n        this.zone,\r\n        this.store,\r\n        this.dateUtil,\r\n        this.paginationService,\r\n        this.exportService,\r\n        this.resumableUploader,\r\n        this.blobDownloader,\r\n        this.dialog\r\n      );\r\n    }\r\n    return this.facade1;\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild, ComponentFactoryResolver } from '@angular/core';\r\nimport { CustomEventType, CustomEventTypeExtensions } from './enums/custom-event-type.enum';\r\nimport { HostDirective } from './directives/host.directive';\r\nimport { MainComponent } from './components/main.component';\r\nimport { DatatransferFacade } from './facades/datatransfer.facade';\r\nimport { DatatransferFacadeFactory } from './factories/datatransfer-facade.factory';\r\nimport { ConfigService } from './services/config.service';\r\nimport { PaginationService } from './services/pagination.service';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'angular-material-datatransfer-lib',\r\n  templateUrl: './angular-material-datatransfer.component.html'\r\n})\r\nexport class AngularMaterialDatatransferComponent implements OnInit {\r\n\r\n  @ViewChild(HostDirective, { static: true }) amdHost: HostDirective;\r\n\r\n  private datatransferFacade: DatatransferFacade;\r\n\r\n  constructor(private componentFactoryResolver: ComponentFactoryResolver,\r\n              private datatransferFacadeFactory: DatatransferFacadeFactory,\r\n              private configService: ConfigService,\r\n              private paginationService: PaginationService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    document.dispatchEvent(new Event(CustomEventTypeExtensions.toString(CustomEventType.INIT)));\r\n  }\r\n\r\n  public create(config: any): void {\r\n    this.setConfig(config);\r\n  }\r\n\r\n  public setConfig(config: any): void {\r\n    this.configService.load(config);\r\n    this.paginationService.setRppOptions(ConfigService.settings.core.paginationRppOptions);\r\n    this.datatransferFacade = this.datatransferFacadeFactory.createDatatransferFacade();\r\n\r\n    const viewContainerRef = this.amdHost.viewContainerRef;\r\n    viewContainerRef.clear();\r\n\r\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(MainComponent);\r\n    const componentRef = viewContainerRef.createComponent(componentFactory);\r\n    const componentRefInstance = componentRef.instance as MainComponent;\r\n    componentRefInstance.datatransferFacade = this.datatransferFacade;\r\n  }\r\n\r\n  public download(filename: string, url: string, size: number): void {\r\n    this.datatransferFacade.download(filename, url, size);\r\n  }\r\n}\r\n","<div class=\"angular-material-datatransfer\">\r\n    <ng-template amd-host></ng-template>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { IDatatransferItem, DatatransferItem } from '../models/datatransfer-item.model';\r\nimport { SizeContainer } from '../models/size-container.model';\r\nimport { DecimalByteUnit } from '../enums/decimal-byte-unit.enum';\r\nimport { ProgressContainer } from '../models/progress-container.model';\r\nimport { TransferType } from '../enums/transfer-type.enum';\r\nimport { TransferStatus } from '../enums/transfer-status.enum';\r\nimport { PreprocessContainer } from '../models/preprocess-container.model';\r\n\r\n@Injectable()\r\nexport class DemoService {\r\n  title = 'angular-material-datatransfer';\r\n\r\n  testItems: IDatatransferItem[] = [\r\n    new DatatransferItem({\r\n      id: '1',\r\n      name: 'DICOM_patientXY_1.dcm',\r\n      path: '/mnt/sdcard/folder1/a/b/',\r\n      sizeContainer: new SizeContainer({ decimalByteUnit: DecimalByteUnit.MB, decimalByteUnitSize: 15 }),\r\n      progressContainer: new ProgressContainer(15 * 1000 * 1000),\r\n      transferType: TransferType.Upload,\r\n      status: TransferStatus.Uploading\r\n    }),\r\n    new DatatransferItem({\r\n      id: '2',\r\n      name: 'DICOM_patientXY_2.dcm',\r\n      path: '/mnt/sdcard/folder1/a/b/',\r\n      sizeContainer: new SizeContainer({ decimalByteUnit: DecimalByteUnit.MB, decimalByteUnitSize: 17 }),\r\n      transferType: TransferType.Upload,\r\n      status: TransferStatus.Failed\r\n    }),\r\n    new DatatransferItem({\r\n      id: '3',\r\n      name: 'DICOM_patientXY_3.dcm',\r\n      path: '/mnt/sdcard/folder1/a/b/',\r\n      preprocessContainer: new PreprocessContainer({ percent: 30 }),\r\n      sizeContainer: new SizeContainer({ decimalByteUnit: DecimalByteUnit.MB, decimalByteUnitSize: 13 }),\r\n      transferType: TransferType.Upload,\r\n      status: TransferStatus.Preprocessing\r\n    }),\r\n    new DatatransferItem({\r\n      id: '4',\r\n      name: 'DICOM_patientXY_4.dcm',\r\n      path: '/mnt/sdcard/folder1/a/b/',\r\n      sizeContainer: new SizeContainer({ decimalByteUnit: DecimalByteUnit.MB, decimalByteUnitSize: 11 }),\r\n      transferType: TransferType.Upload,\r\n      status: TransferStatus.Queued,\r\n    }),\r\n    new DatatransferItem({\r\n      id: '5',\r\n      name: 'SMIR.Thorax.089Y.M.CT.7.000.dcm.zip',\r\n      path: '/',\r\n      sizeContainer: new SizeContainer({ decimalByteUnit: DecimalByteUnit.GB, decimalByteUnitSize: 2 }),\r\n      transferType: TransferType.Download,\r\n      status: TransferStatus.Queued\r\n    }),\r\n    new DatatransferItem({\r\n      id: '6',\r\n      name: 'NIFTI_patientXY.nii',\r\n      path: '/mnt/sdcard/folder2/d/',\r\n      sizeContainer: new SizeContainer({ decimalByteUnit: DecimalByteUnit.GB, decimalByteUnitSize: 12 }),\r\n      transferType: TransferType.Upload,\r\n      status: TransferStatus.Queued,\r\n    })\r\n  ];\r\n}\r\n","import { NgModule, ApplicationRef } from \"@angular/core\";\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatMenuModule } from \"@angular/material/menu\";\r\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\r\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\r\n\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\n\r\nimport { AngularMaterialDatatransferComponent } from \"./angular-material-datatransfer.component\";\r\nimport { MainComponent } from \"./components/main.component\";\r\nimport { BrowseDialogComponent } from \"./components/browse-dialog.component\";\r\nimport { DropzoneComponent } from \"./components/dropzone.component\";\r\nimport { EditDialogComponent } from \"./components/edit-dialog.component\";\r\nimport { PaginationComponent } from \"./components/pagination.component\";\r\nimport { ProgressComponent } from \"./components/progress.component\";\r\nimport { ConfigService } from \"./services/config.service\";\r\nimport { LoggerService } from \"./services/logger.service\";\r\nimport { PaginationService } from \"./services/pagination.service\";\r\nimport { ExportService } from \"./services/export.service\";\r\nimport { DemoService } from \"./services/demo.service\";\r\nimport { CryptoService } from \"./services/crypto.service\";\r\nimport { DatatransferStore } from \"./stores/datatransfer.store\";\r\nimport { DatatransferFacadeFactory } from \"./factories/datatransfer-facade.factory\";\r\nimport { CommonUtil } from \"./utils/common.util\";\r\nimport { DateUtil } from \"./utils/date.util\";\r\nimport { DecimalByteUnitUtil } from \"./utils/decimal-byte-unit.util\";\r\nimport { GuidUtil } from \"./utils/guid.util\";\r\nimport { CsvExporter } from \"./io/exporters/csv.exporter\";\r\nimport { JsonExporter } from \"./io/exporters/json.exporter\";\r\nimport { ResumableJsUploader } from \"./io/uploaders/resumablejs.uploader\";\r\nimport { BlobDownloader } from \"./io/downloaders/blob.downloader\";\r\nimport { HostDirective } from \"./directives/host.directive\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AngularMaterialDatatransferComponent,\r\n    MainComponent,\r\n    BrowseDialogComponent,\r\n    DropzoneComponent,\r\n    EditDialogComponent,\r\n    PaginationComponent,\r\n    ProgressComponent,\r\n    HostDirective,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatDialogModule,\r\n    MatFormFieldModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatMenuModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatSelectModule,\r\n    MatTooltipModule,\r\n    FlexLayoutModule,\r\n  ],\r\n  exports: [AngularMaterialDatatransferComponent],\r\n  entryComponents: [MainComponent, BrowseDialogComponent, EditDialogComponent],\r\n  providers: [\r\n    ConfigService,\r\n    LoggerService,\r\n    PaginationService,\r\n    ExportService,\r\n    DemoService,\r\n    CryptoService,\r\n    DatatransferStore,\r\n    DatatransferFacadeFactory,\r\n    CommonUtil,\r\n    DateUtil,\r\n    DecimalByteUnitUtil,\r\n    GuidUtil,\r\n    CsvExporter,\r\n    JsonExporter,\r\n    ResumableJsUploader,\r\n    BlobDownloader,\r\n  ],\r\n})\r\nexport class AngularMaterialDatatransferModule {\r\n  constructor(public appRef: ApplicationRef) {}\r\n}\r\n","/*\r\n * Public API Surface of angular-material-datatransfer\r\n */\r\n\r\nexport * from \"./lib/angular-material-datatransfer.component\";\r\nexport * from \"./lib/angular-material-datatransfer.module\";\r\nexport * from \"./lib/stores/datatransfer.store\";\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["Directive","Injectable","ReflectiveInjector","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵproperty","i0.ɵɵadvance","i0.ɵɵtextInterpolate1","i0.ɵɵlistener","i0.ɵɵtemplate","i0.ɵɵtextInterpolate3","Component","Input","i0.ɵɵelement","i0.ɵɵtextInterpolate","i0.ɵɵpropertyInterpolate1","i0.ɵɵpropertyInterpolate","MAT_DIALOG_DATA","Inject","FormControl","cryptoBrowserify.createHash","Resumable","saveAs","ViewChild","BrowserModule","BrowserAnimationsModule","FormsModule","ReactiveFormsModule","MatButtonModule","MatCheckboxModule","MatDialogModule","MatFormFieldModule","MatIconModule","MatInputModule","MatMenuModule","MatProgressBarModule","MatProgressSpinnerModule","MatSelectModule","MatTooltipModule","FlexLayoutModule","NgModule"],"mappings":"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"}